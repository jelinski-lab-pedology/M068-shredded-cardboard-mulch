---
title: "Crop productivity analysis"
---

## Packages

```{r}
library(tidyr)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(here)
library(MASS) #boxcox transformation
library(lme4)         #mixed models
library(lmerTest)     #mixed models
library(broom.mixed)  #mixed models
library(emmeans)
```

## Loading Data

```{r}
yield <- read.csv(here::here("00-data", "b-prepared", 
                             "20250725_SCM-yield.csv"), 
                      header = TRUE)

spad <- read.csv(here::here("00-data", "b-prepared", 
                            "20250716_SCM-SPAD.csv"), 
                     header = TRUE)

```

## Format Data

### yield
```{r}
#Move edge data into a separate dataframe
edge <- subset(yield, block == "edge")
biomass <- subset(yield, is.na(biomass_g) == FALSE)

#overall formatting
yield <- yield %>%
        subset(block != 5) %>%
        subset(block != "edge") %>%
        dplyr::select(-notes, biomass_g) %>%
        mutate(date_collected = lubridate::as_date(date_collected, 
                                                   format = "%m/%d/%Y"),
               year = lubridate::isoyear(ymd(date_collected)),
               month = lubridate::month(date_collected),
               week = lubridate::isoweek(ymd(date_collected))) %>%
        mutate_at(c('block', 'plot', 'treatment', 
                    'crop', "year", "week", "month"), 
                  as.factor) %>%
        group_by(date_collected, week, month, year, 
                 block, plot, treatment, crop) %>%
        summarize(marketable_g = sum(marketable_g, na.rm = TRUE),
                  unmarketable_g = sum(unmarketable_g, na.rm = TRUE),
                  total_g = sum(total_g, na.rm = TRUE),
                  per_market = (marketable_g/total_g)*100,
                  per_unmarket = (unmarketable_g/total_g)*100) %>%
        ungroup

# calculating the total yield per week for each plot
# mostly impacts 2023, when we occassionally harvested 2x per week
yield_wk <- yield %>%
            group_by(week, year, block, plot, treatment, crop) %>%
            summarize(marketable_g = sum(marketable_g, na.rm = TRUE),
                      unmarketable_g = sum(unmarketable_g, na.rm = TRUE),
                      total_g = sum(total_g, na.rm = TRUE),
                      per_market = (marketable_g/total_g)*100,
                      per_unmarket = (unmarketable_g/total_g)*100) %>%
            ungroup

# separate data frames for the weekly yield data for each crop
yield_wk_AS <- subset(yield_wk, crop == "AS" & total_g != 0)
yield_wk_23_AS <- subset(yield_wk_AS, year == "2023")
yield_wk_24_AS <- subset(yield_wk_AS, year == "2024")

yield_wk_DB <- subset(yield_wk, crop == "DB" & total_g != 0)
yield_wk_23_DB <- subset(yield_wk_DB, year == "2023")
yield_wk_24_DB <- subset(yield_wk_DB, year == "2024")

yield_wk_FC <- subset(yield_wk, crop == "FC" & total_g != 0)
yield_wk_23_FC <- subset(yield_wk_FC, year == "2023")
yield_wk_24_FC <- subset(yield_wk_FC, year == "2024")

# calculating annual yield for each plot
yield_yr <- yield %>%
            group_by(year, block, plot, treatment, crop) %>%
            summarize(marketable_g = sum(marketable_g, na.rm = TRUE),
                      unmarketable_g = sum(unmarketable_g, na.rm = TRUE),
                      total_g = sum(total_g, na.rm = TRUE),
                      per_market = (marketable_g/total_g)*100,
                      per_unmarket = (unmarketable_g/total_g)*100) %>%
            ungroup

# separate data frames for the annual yield for each crop

yield_yr_AS <- subset(yield_yr, crop == "AS")
yield_23_AS <- subset(yield_yr_AS, year == "2023")
yield_24_AS <- subset(yield_yr_AS, year == "2024")

yield_yr_DB <- subset(yield_yr, crop == "DB")
yield_23_DB <- subset(yield_yr_DB, year == "2023")
yield_24_DB <- subset(yield_yr_DB, year == "2024")

yield_yr_FC <- subset(yield_yr, crop == "FC")
yield_23_FC <- subset(yield_yr_FC, year == "2023")
yield_24_FC <- subset(yield_yr_FC, year == "2024")
```
#### Transformations

##### Weekly yield
Note that these ONLY achieve a normal distribution if weeks with 0g total yield for a plot are excluded
```{r}
#Strawberries 2023 marketable
bc <- boxcox(lm((yield_wk_23_AS$marketable_g + 1) ~ 1))
lambda <- bc$x[which.max(bc$y)]
yield_wk_23_AS$bc_marketable <- ((yield_wk_23_AS$marketable_g + 1) ^ lambda -1)/lambda

#Strawberries 2023 total
bc <- boxcox(lm(yield_wk_23_AS$total_g ~ 1))
lambda <- bc$x[which.max(bc$y)]
yield_wk_23_AS$bc_total <- (yield_wk_23_AS$total_g ^ lambda -1)/lambda

#Strawberries 2024 total
bc <- boxcox(lm(yield_wk_24_AS$total_g ~ 1))
lambda <- bc$x[which.max(bc$y)]
yield_wk_24_AS$bc_total <- (yield_wk_24_AS$total_g ^ lambda -1)/lambda

#Beans both years marketable
bc <- boxcox(lm((yield_wk_DB$marketable_g) ~ 1))
lambda <- bc$x[which.max(bc$y)]
yield_wk_DB$bc_marketable <- ((yield_wk_DB$marketable_g) ^ lambda -1)/lambda

#Beans 2023 marketable
bc <- boxcox(lm((yield_wk_23_DB$marketable_g) ~ 1))
lambda <- bc$x[which.max(bc$y)]
yield_wk_23_DB$bc_marketable <- ((yield_wk_23_DB$marketable_g) ^ lambda -1)/lambda

#Beans 2024 marketable
bc <- boxcox(lm((yield_wk_24_DB$marketable_g) ~ 1))
lambda <- bc$x[which.max(bc$y)]
yield_wk_24_DB$bc_marketable <- ((yield_wk_24_DB$marketable_g) ^ lambda -1)/lambda

#Beans both years total
bc <- boxcox(lm((yield_wk_DB$total_g) ~ 1))
lambda <- bc$x[which.max(bc$y)]
yield_wk_DB$bc_total <- ((yield_wk_DB$total_g) ^ lambda -1)/lambda

#Beans 2023 total
bc <- boxcox(lm((yield_wk_23_DB$total_g) ~ 1))
lambda <- bc$x[which.max(bc$y)]
yield_wk_23_DB$bc_total <- ((yield_wk_23_DB$total_g) ^ lambda -1)/lambda

#Beans 2024 total
bc <- boxcox(lm((yield_wk_24_DB$total_g) ~ 1))
lambda <- bc$x[which.max(bc$y)]
yield_wk_24_DB$bc_total <- ((yield_wk_24_DB$total_g) ^ lambda -1)/lambda

#Collards both years marketable
bc <- boxcox(lm((yield_wk_FC$marketable_g) ~ 1))
lambda <- bc$x[which.max(bc$y)]
yield_wk_FC$bc_marketable <- ((yield_wk_FC$marketable_g) ^ lambda -1)/lambda

#Collards 2024 marketable
bc <- boxcox(lm((yield_wk_24_FC$marketable_g) ~ 1))
lambda <- bc$x[which.max(bc$y)]
yield_wk_24_FC$bc_marketable <- ((yield_wk_24_FC$marketable_g) ^ lambda -1)/lambda

#Collards both years total
bc <- boxcox(lm((yield_wk_FC$total_g) ~ 1))
lambda <- bc$x[which.max(bc$y)]
yield_wk_FC$bc_total <- ((yield_wk_FC$total_g) ^ lambda -1)/lambda

#Collards 2024 total
bc <- boxcox(lm((yield_wk_24_FC$total_g) ~ 1))
lambda <- bc$x[which.max(bc$y)]
yield_wk_24_FC$bc_total <- ((yield_wk_24_FC$total_g) ^ lambda -1)/lambda
```

##### Annual Yield
```{r}
#Strawberries both years marketable
bc <- boxcox(lm(yield_yr_AS$marketable_g ~ 1))
lambda <- bc$x[which.max(bc$y)]
yield_yr_AS$bc_marketable <- (yield_yr_AS$marketable_g ^ lambda -1)/lambda

#Strawberries both years unmarketable
bc <- boxcox(lm(yield_yr_AS$unmarketable_g ~ 1))
lambda <- bc$x[which.max(bc$y)]
yield_yr_AS$bc_unmarketable <- (yield_yr_AS$unmarketable_g ^ lambda -1)/lambda

#Strawberries 2024 unmarketable
bc <- boxcox(lm(yield_24_AS$unmarketable_g ~ 1))
lambda <- bc$x[which.max(bc$y)]
yield_24_AS$bc_unmarket <- (yield_24_AS$unmarketable_g ^ lambda -1)/lambda

#Beans 2024 marketable
bc <- boxcox(lm(yield_24_DB$marketable_g ~ 1))
lambda <- bc$x[which.max(bc$y)]
yield_24_DB$bc_marketable <- (yield_24_DB$marketable_g ^ lambda -1)/lambda

#Beans 2024 total
bc <- boxcox(lm(yield_24_DB$total_g ~ 1))
lambda <- bc$x[which.max(bc$y)]
yield_24_DB$bc_total <- (yield_24_DB$total_g ^ lambda -1)/lambda

#Collards 2023 marketable - boxcox, squared, and cubic because all achieve a normal distribution, and boxcox would be consistent with other transformations but cubic has the best distribution
bc <- boxcox(lm(yield_23_FC$marketable_g ~ 1))
lambda <- bc$x[which.max(bc$y)]
yield_23_FC$bc_market <- (yield_23_FC$marketable_g ^ lambda -1)/lambda

yield_23_FC$sq_market <- yield_23_FC$marketable_g^2

yield_23_FC$cubic_market <- yield_23_FC$marketable_g^3

#Collards both years unmarketables
bc <- boxcox(lm(yield_yr_FC$unmarketable_g ~ 1))
lambda <- bc$x[which.max(bc$y)]
yield_yr_FC$bc_unmarketable <- (yield_yr_FC$unmarketable_g ^ lambda -1)/lambda

# Collards 2023 unmarketable
yield_23_FC$cubic_unmarketable <- yield_23_FC$unmarketable_g^3

# Collards 2023 total 
yield_23_FC$cubic_total <- yield_23_FC$total_g^3

```

### SPAD
```{r}

spad <- spad %>%
        subset(block != 5) %>% 
        dplyr::select(-average_reading) %>%
        mutate(date_collected = lubridate::as_date(date_collected, format = "%m/%d/%Y"),
               year = lubridate::isoyear(ymd(date_collected))) %>%
        subset(date_collected != "2023-08-24") %>%
        pivot_longer(cols = c("reading_1", "reading_2", "reading_3"),
                     names_to = "reading",
                     values_to = "value") %>%
        mutate_at(c('sampling','block', 'plot', 'treatment', 'crop', "year"), as.factor)

spad_AS <- subset(spad, crop == "AS")
spad_DB <- subset(spad, crop == "DB")
spad_FC <- subset(spad, crop == "FC")

spad_out <- spad
```

#### Strawberries

There are 26 potential outliers. Except for a plant where all three readings were high in 1-B on 7/16/2024, others were individually elevated readings. Only one one was lower than the lower bound. 
```{r}
Q1 <- quantile(spad_AS$value, 0.25, na.rm = TRUE) 
Q3 <- quantile(spad_AS$value, 0.75, na.rm = TRUE) 
IQR <- IQR(spad_AS$value,na.rm = TRUE)

lower_bound <- Q1 - (1.5*IQR)
upper_bound <- Q3 + (1.5*IQR)

spad_AS %>% subset(value > upper_bound | value < lower_bound)

#saving a df with outliers for comparison
spad_AS_out <- spad_AS

#outliers removed
spad_AS <- spad_AS %>%
           subset(value > lower_bound & value < upper_bound)

spad_23_AS <- subset(spad_AS, year == "2023")
spad_23_AS_out <- subset(spad_AS_out, year == "2023")
spad_24_AS <- subset(spad_AS, year == "2024")
spad_24_AS_out <- subset(spad_AS_out, year == "2024")

#Transformation for Strawberries 2023 
bc <- boxcox(lm(spad_23_AS$value ~ 1))
lambda <- bc$x[which.max(bc$y)]
spad_23_AS$bc_value <- (spad_23_AS$value ^ lambda -1)/lambda

bc <- boxcox(lm(spad_23_AS_out$value ~ 1))
lambda <- bc$x[which.max(bc$y)]
spad_23_AS_out$bc_value <- (spad_23_AS_out$value ^ lambda -1)/lambda

```

#### Beans

Wowza, 78 potential outliers identified. I'm tempted to do the same here, where I adjust the range a little to keep > 10 and < 50
```{r}
Q1 <- quantile(spad_DB$value, 0.25, na.rm = TRUE) 
Q3 <- quantile(spad_DB$value, 0.75, na.rm = TRUE) 
IQR <- IQR(spad_DB$value,na.rm = TRUE)

lower_bound <- Q1 - (1.5*IQR)
upper_bound <- Q3 + (1.5*IQR)

spad_DB %>% subset(value > upper_bound | value < lower_bound)

#saving a df with outliers for comparison
spad_DB_out <- spad_DB

#outliers removed
spad_DB <- spad_DB %>%
           subset(value > lower_bound & value < upper_bound)

spad_23_DB <- subset(spad_DB, year == "2023")
spad_23_DB_out <- subset(spad_DB_out, year == "2023")
spad_24_DB <- subset(spad_DB, year == "2024")
spad_24_DB_out <- subset(spad_DB_out, year == "2024")

```

#### Collards
88 potential outliers! All but one above the upper bound. I feel more comfortable removing that one. 
```{r}
Q1 <- quantile(spad_FC$value, 0.25, na.rm = TRUE) 
Q3 <- quantile(spad_FC$value, 0.75, na.rm = TRUE) 
IQR <- IQR(spad_FC$value,na.rm = TRUE)

lower_bound <- Q1 - (1.5*IQR)
upper_bound <- Q3 + (1.5*IQR)

spad_FC %>% subset(value > upper_bound | value < lower_bound)

#saving a df with outliers for comparison
spad_FC_out <- spad_FC

#outliers removed
spad_FC <- spad_FC %>%
           subset(value > lower_bound & value < upper_bound)

spad <- rbind(spad_AS, spad_DB, spad_FC)

spad_23_FC <- subset(spad_FC, year == "2023")
spad_23_FC_out <- subset(spad_FC_out, year == "2023")
spad_24_FC <- subset(spad_FC, year == "2024")
spad_24_FC_out <- subset(spad_FC_out, year == "2024")

```


## Weekly yield

### Visualizations by sampling date

#### Marketable yield
```{r}
#visualized each year separately, by sampling for each crop/treatment - this would need a lot of work
ggplot(subset(yield, year == 2023 & crop == "AS"), aes(x = as.factor(date_collected), y = marketable_g, fill = treatment)) + geom_boxplot() + theme(axis.text.x = element_text(angle = 45))
ggplot(subset(yield, year == 2023 & crop == "DB"), aes(x = as.factor(date_collected), y = marketable_g, fill = treatment)) + geom_boxplot() + theme(axis.text.x = element_text(angle = 45))
ggplot(subset(yield, year == 2023 & crop == "FC"), aes(x = as.factor(date_collected), y = marketable_g, fill = treatment)) + geom_boxplot() + theme(axis.text.x = element_text(angle = 45))

#excluding plots without harvest
ggplot(yield_wk_23_AS, aes(x = week, y = marketable_g, fill = treatment)) + geom_boxplot() + theme(axis.text.x = element_text(angle = 45))
ggplot(yield_wk_23_DB, aes(x = week, y = marketable_g, fill = treatment)) + geom_boxplot() + theme(axis.text.x = element_text(angle = 45))
ggplot(yield_wk_23_FC, aes(x = week, y = marketable_g, fill = treatment)) + geom_boxplot() + theme(axis.text.x = element_text(angle = 45))
```

```{r}
ggplot(subset(yield, year == 2024 & crop == "AS"), aes(x = as.factor(date_collected), y = marketable_g, fill = treatment)) + geom_boxplot() + theme(axis.text.x = element_text(angle = 45))
ggplot(subset(yield, year == 2024 & crop == "DB"), aes(x = as.factor(date_collected), y = marketable_g, fill = treatment)) + geom_boxplot() + theme(axis.text.x = element_text(angle = 45))
ggplot(subset(yield, year == 2024 & crop == "FC"), aes(x = as.factor(date_collected), y = marketable_g, fill = treatment)) + geom_boxplot() + theme(axis.text.x = element_text(angle = 45))

#excluding plots without harvest
ggplot(yield_wk_24_AS, aes(x = week, y = marketable_g, fill = treatment)) + geom_boxplot() + theme(axis.text.x = element_text(angle = 45))
ggplot(yield_wk_24_DB, aes(x = week, y = marketable_g, fill = treatment)) + geom_boxplot() + theme(axis.text.x = element_text(angle = 45))
ggplot(yield_wk_24_FC, aes(x = week, y = marketable_g, fill = treatment)) + geom_boxplot() + theme(axis.text.x = element_text(angle = 45))

```

```{r}

#sampling combined, visualized by crop/treatment for each year
ggplot(subset(yield, crop == "AS"), aes(x = year, y = marketable_g, fill = treatment)) + geom_boxplot() 
ggplot(subset(yield, crop == "DB"), aes(x = year, y = marketable_g, fill = treatment)) + geom_boxplot()
ggplot(subset(yield, crop == "FC"), aes(x = year, y = marketable_g, fill = treatment)) + geom_boxplot()

# excluding plots with 0 g harvest
ggplot(yield_wk_AS, aes(x = year, y = marketable_g, fill = treatment)) + geom_boxplot() 
ggplot(yield_wk_DB, aes(x = year, y = marketable_g, fill = treatment)) + geom_boxplot()
ggplot(yield_wk_FC, aes(x = year, y = marketable_g, fill = treatment)) + geom_boxplot()

#sampling and year combined, visualized by crop/treatment. 
ggplot(subset(yield, crop == "AS"), aes(x = treatment, y = marketable_g)) + geom_boxplot() 
ggplot(subset(yield, crop == "DB"), aes(x = treatment, y = marketable_g)) + geom_boxplot()
ggplot(subset(yield, crop == "FC"), aes(x = treatment, y = marketable_g)) + geom_boxplot()

# excluding plots with 0 g harvest
ggplot(yield_wk_AS, aes(x = treatment, y = marketable_g)) + geom_boxplot() 
ggplot(yield_wk_DB, aes(x = treatment, y = marketable_g)) + geom_boxplot()
ggplot(yield_wk_FC, aes(x = treatment, y = marketable_g)) + geom_boxplot()

```

#### Percent marketable
```{r}
#visualized each year separately, by sampling for each crop/treatment - this would need a lot of work
ggplot(subset(yield_wk, year == 2023), aes(x = week, y = per_market, fill = treatment)) + geom_boxplot() + facet_wrap(~crop)
ggplot(subset(yield_wk, year == 2024), aes(x = week, y = per_market, fill = treatment)) + geom_boxplot() + facet_wrap(~crop)

#excluding plots with no harvest
ggplot(subset(yield_wk, year == 2023 & total_g != 0), aes(x = week, y = per_market, fill = treatment)) + geom_boxplot() + facet_wrap(~crop)
ggplot(subset(yield_wk, year == 2024 & total_g != 0), aes(x = week, y = per_market, fill = treatment)) + geom_boxplot() + facet_wrap(~crop)

#sampling combined, visualized by crop/treatment for each year
ggplot(subset(yield_wk, crop == "AS"), aes(x = year, y = per_market, fill = treatment)) + geom_boxplot() 
ggplot(subset(yield_wk, crop == "DB"), aes(x = year, y = per_market, fill = treatment)) + geom_boxplot()
ggplot(subset(yield_wk, crop == "FC"), aes(x = year, y = per_market, fill = treatment)) + geom_boxplot()

#excluding plots with no harvest
ggplot(yield_wk_AS, aes(x = year, y = per_market, fill = treatment)) + geom_boxplot() 
ggplot(yield_wk_DB, aes(x = year, y = per_market, fill = treatment)) + geom_boxplot()
ggplot(yield_wk_FC, aes(x = year, y = per_market, fill = treatment)) + geom_boxplot()

#sampling and year combined, visualized by crop/treatment. 
ggplot(subset(yield_wk, crop == "AS"), aes(x = treatment, y = per_market)) + geom_boxplot() 
ggplot(subset(yield_wk, crop == "DB"), aes(x = treatment, y = per_market)) + geom_boxplot()
ggplot(subset(yield_wk, crop == "FC"), aes(x = treatment, y = per_market)) + geom_boxplot()

```

#### Unmarketable yield
```{r}
#visualized each year separately, by sampling for each crop/treatment - this would need a lot of work
ggplot(subset(yield, year == 2023), aes(x = as.factor(date_collected), y = unmarketable_g, fill = treatment)) + geom_boxplot() + facet_wrap(~crop)
ggplot(subset(yield, year == 2024), aes(x = as.factor(date_collected), y = unmarketable_g, fill = treatment)) + geom_boxplot() + facet_wrap(~crop)

#sampling combined, visualized by crop/treatment for each year
ggplot(subset(yield, crop == "AS"), aes(x = year, y = unmarketable_g, fill = treatment)) + geom_boxplot() 
ggplot(subset(yield, crop == "DB"), aes(x = year, y = unmarketable_g, fill = treatment)) + geom_boxplot()
ggplot(subset(yield, crop == "FC"), aes(x = year, y = unmarketable_g, fill = treatment)) + geom_boxplot()

#sampling and year combined, visualized by crop/treatment. 
ggplot(subset(yield, crop == "AS"), aes(x = treatment, y = unmarketable_g)) + geom_boxplot() 
ggplot(subset(yield, crop == "DB"), aes(x = treatment, y = unmarketable_g)) + geom_boxplot()
ggplot(subset(yield, crop == "FC"), aes(x = treatment, y = unmarketable_g)) + geom_boxplot()

```

#### Total yield
```{r}
#visualized each year separately, by sampling for each crop/treatment - this would need a lot of work
ggplot(subset(yield, year == 2023), aes(x = as.factor(date_collected), y = total_g, fill = treatment)) + geom_boxplot() + facet_wrap(~crop)
ggplot(subset(yield, year == 2024), aes(x = as.factor(date_collected), y = total_g, fill = treatment)) + geom_boxplot() + facet_wrap(~crop)

#excluding plots with 0g harvest
ggplot(subset(yield, year == 2023 & total_g != 0), aes(x = as.factor(date_collected), y = total_g, fill = treatment)) + geom_boxplot() + facet_wrap(~crop)
ggplot(subset(yield, year == 2024 & total_g != 0), aes(x = as.factor(date_collected), y = total_g, fill = treatment)) + geom_boxplot() + facet_wrap(~crop)

#sampling combined, visualized by crop/treatment for each year
ggplot(subset(yield, crop == "AS"), aes(x = year, y = total_g, fill = treatment)) + geom_boxplot() 
ggplot(subset(yield, crop == "DB"), aes(x = year, y = total_g, fill = treatment)) + geom_boxplot()
ggplot(subset(yield, crop == "FC"), aes(x = year, y = total_g, fill = treatment)) + geom_boxplot()

#excluding weeks with 0 g 
ggplot(yield_wk_AS, aes(x = year, y = total_g, fill = treatment)) + geom_boxplot() 
ggplot(yield_wk_DB, aes(x = year, y = total_g, fill = treatment)) + geom_boxplot()
ggplot(yield_wk_FC, aes(x = year, y = total_g, fill = treatment)) + geom_boxplot()

#sampling and year combined, visualized by crop/treatment. 
ggplot(subset(yield, crop == "AS"), aes(x = treatment, y = total_g)) + geom_boxplot() 
ggplot(subset(yield, crop == "DB"), aes(x = treatment, y = total_g)) + geom_boxplot()
ggplot(subset(yield, crop == "FC"), aes(x = treatment, y = total_g)) + geom_boxplot()

```


## Annual Yield

#### For manuscript

##### Statistical Analysis
Strawberries
```{r}
# 2023: there is a significant difference between bare soil and the mulches
aov <- aov(total_g ~ treatment, data = yield_23_AS)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

#there is not a significant difference between treatments. model assumptions are met.
aov <- aov(per_market ~ treatment, data = yield_23_AS)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

# 2024: there is a significant difference between bare soil and the mulches
aov <- aov(total_g ~ treatment, data = yield_24_AS)
summary(aov)
TukeyHSD(aov)
AIC(aov)


# 2024: There was a significant difference between CM and BM for percent marketable strawberry yield

kruskal.test(per_market ~ treatment, data = yield_24_AS)
dunnTest(per_market ~ treatment, data = yield_24_AS)



```

Beans
```{r}
#overall: While the dataset is non-parametric, it seems to meet assumptions. I tried the boxcox transformed version (which is also not normally distributed), and it definitely did not meet assumptions. There is a difference between years, but not treatments 
aov <- aov(total_g ~ treatment*year, data = yield_yr_DB)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

# There is not a significant difference between years for percent marketable yield
kruskal.test(per_market ~ year, data = yield_yr_DB)

# 2023: there is a nearly significant difference between BM and SM
aov <- aov(total_g ~ treatment, data = yield_23_DB)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

# 2024: there is no significant difference between treatments
aov <- aov(bc_total ~ treatment, data = yield_24_DB)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

# 2023: Pretty sure everything was 100%
kruskal.test(per_market ~ treatment, data = yield_23_DB)

# 2024: Bare soil is significantly less than straw, nearly significantly less than cardboard
kruskal.test(per_market ~ treatment, data = yield_24_DB)
dunnTest(per_market ~ treatment, data =yield_24_DB)

```

Collards
```{r}
# There is was a significant difference in treatment, but there is between years
aov <- aov(total_g ~ treatment*year, data = yield_yr_FC)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

#running KW, just to check
kruskal.test(total_g ~ year, data = yield_yr_FC)

# there is not a significant difference between treatments
aov <- aov(per_market ~ treatment, data = yield_yr_FC)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

kruskal.test(per_market ~ treatment, data = yield_yr_FC)


# 2023: no difference between treatments
aov <- aov(cubic_total ~ treatment, data = yield_23_FC)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

kruskal.test(total_g ~ treatment, data = yield_23_FC)


aov <- aov(per_market ~ treatment, data = yield_23_FC)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

kruskal.test(per_market ~ treatment, data = yield_23_FC)

# 2024: no treatment differences
aov <- aov(total_g ~ treatment, data = yield_24_FC)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

# 2024: tried the transformed dataset as well, and it didn't make a huge difference in model quality
aov <- aov(per_market ~ treatment, data = yield_24_FC)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

kruskal.test(per_market ~ treatment, data = subset(yield_yr_FC, year == "2024"))

```

##### Figures and Tables


```{r}
# average and SD
yield_yr$total_kg <- yield_yr$total_g/1000

sum_stat_yield <- yield_yr %>%
                    group_by(year, crop, treatment) %>%
                    summarize(min_yield = min(total_kg, na.rm = TRUE),
                              median_yield = median(total_kg, na.rm = TRUE),
                              max_yield = max(total_kg, na.rm = TRUE),
                              avg_yield = mean(total_kg, na.rm = TRUE),
                              sd_yield = sd(total_kg, na.rm = TRUE))

sum_stat_per <- yield_yr %>%
                    group_by(year, crop, treatment) %>%
                    summarize(min_yield = min(per_market, na.rm = TRUE),
                              median_yield = median(per_market, na.rm = TRUE),
                              max_yield = max(per_market, na.rm = TRUE),
                              avg_yield = mean(per_market, na.rm = TRUE),
                              sd_yield = sd(per_market, na.rm = TRUE))

write.csv(sum_stat_per, here::here("20250813_SCM_marketable.csv"), row.names=TRUE)

dat_text <- data.frame(
  label = c("a", "a", "a", "?", "?", "?", "?", "?", "?"),
  crop   = c("AS", "AS", "AS", "DB", "DB", "DB", "FC", "FC", "FC")
)

dat_text$crop <- as.factor(dat_text$crop) 

# total yield

ggplot(yield_yr, aes(x = year, 
                   y = total_kg, 
                   fill = treatment)) + 
  geom_boxplot() + 
  theme_bw() + 
  ylab("Total Yield (kg)") +
  facet_wrap(~crop, scales = "free_y", labeller = as_labeller(c(AS = "Strawberries", DB = "Beans", FC = "Collards"))) +
  theme(axis.title.y = element_text(vjust = 3),
        axis.title.x = element_blank()) +
  scale_fill_manual(name = "Mulch Treatment", 
                    labels = c("Bare soil", "Shredded Cardboard", "Straw"), 
                    values = c("#A6CEE3", "#6A3D9A", "#CAB2D6")) + 
  guides(fill = FALSE)

ggsave("20250813_SCM_yield.png")

ggplot(yield_yr, aes(x = year, 
                   y = per_market, 
                   fill = treatment)) + 
  geom_boxplot() + 
  theme_bw() + 
  ylab("Marketable Yield (as % of total yield)") +
  facet_wrap(~crop, labeller = as_labeller(c(AS = "Strawberries", DB = "Beans", FC = "Collards"))) +
  theme(axis.title.y = element_text(vjust = 3),
        axis.title.x = element_blank(),
        legend.position = "inside",
        legend.position.inside = c(0.5,0.25)) +
  scale_fill_manual(name = "Mulch Treatment", 
                    labels = c("Bare soil", "Shredded Cardboard", "Straw"), 
                    values = c("#A6CEE3", "#6A3D9A", "#CAB2D6")) 
  
  ggsave("20250813_SCM_marketable.png")
  


ggplot(yield_wk, aes(x = week, 
                   y = total_g, 
                   fill = treatment)) + 
  geom_boxplot() + 
  theme_bw() + 
  facet_wrap(~year + crop, scales = "free_y", labeller = as_labeller(c("2023" = "2023", "2024" = "2024", AS = "Strawberries", DB = "Beans", FC = "Collards"))) +
  xlab("Weeks after January 1") +
  ylab("Total Yield (g)") +
  theme(axis.title.y = element_text(vjust = 3),
        legend.position = "top",
        axis.text.x = element_text(angle = 45)) +
  scale_fill_manual(name = "Mulch Treatment", 
                    labels = c("Bare soil", "Shredded Cardboard", "Straw"), 
                    values = c("#A6CEE3", "#6A3D9A", "#CAB2D6")) 

ggsave("20250813_SCM_yield_week.png", width = 9, height = 6)
  

```

### Visualizations

#### Yield
```{r}
# Strawberries
yield_yr_AS_vis <- yield_yr_AS %>%
                   dplyr::select(c(1:8)) %>%
                   pivot_longer(cols = c('marketable_g', 'unmarketable_g', 
                                         'total_g'),
                                names_to = 'type',
                                values_to = 'yield_g') %>%
                   mutate(type = factor(type, levels = c('marketable_g', 
                                                         'unmarketable_g', 
                                                         'total_g')))
          

ggplot(subset(yield_yr_AS_vis, year == "2023"), 
       aes(x = type, y = yield_g, fill = treatment)) + 
  geom_boxplot()

ggplot(subset(yield_yr_AS_vis, year == "2024"), 
       aes(x = type, y = yield_g, fill = treatment)) + 
  geom_boxplot()


# Beans
yield_yr_DB_vis <- yield_yr_DB %>%
                   dplyr::select(c(1:8)) %>%
                   pivot_longer(cols = c('marketable_g', 'unmarketable_g', 
                                         'total_g'),
                                names_to = 'type',
                                values_to = 'yield_g') %>%
                   mutate(type = factor(type, levels = c('marketable_g', 
                                                         'unmarketable_g', 
                                                         'total_g')))
          

ggplot(subset(yield_yr_DB_vis, year == "2023"), 
       aes(x = type, y = yield_g, fill = treatment)) + 
  geom_boxplot()

ggplot(subset(yield_yr_DB_vis, year == "2024"), 
       aes(x = type, y = yield_g, fill = treatment)) + 
  geom_boxplot()


# Collards
yield_yr_FC_vis <- yield_yr_FC %>%
                   dplyr::select(c(1:8)) %>%
                   pivot_longer(cols = c('marketable_g', 'unmarketable_g', 
                                         'total_g'),
                                names_to = 'type',
                                values_to = 'yield_g') %>%
                   mutate(type = factor(type, levels = c('marketable_g', 
                                                         'unmarketable_g', 
                                                         'total_g')))
          

ggplot(subset(yield_yr_FC_vis, year == "2023"), 
       aes(x = type, y = yield_g, fill = treatment)) + 
  geom_boxplot()

ggplot(subset(yield_yr_FC_vis, year == "2024"), 
       aes(x = type, y = yield_g, fill = treatment)) + 
  geom_boxplot()
  

```
#### Percent marketable
```{r}
# Strawberries
ggplot(yield_yr_AS, aes(x = year, y = per_market, fill = treatment)) + geom_boxplot() 

# Beans
ggplot(yield_yr_DB, aes(x = year, y = per_market, fill = treatment)) + geom_boxplot() 

# Collards
ggplot(yield_yr_FC, aes(x = year, y = per_market, fill = treatment)) + geom_boxplot()
```


### Analysis

#### Strawberries

##### Marketable yield

Visualizations
```{r}
#sampling combined, visualized by crop/treatment for each year
ggplot(yield_yr_AS, aes(x = year, y = marketable_g, fill = treatment)) + geom_boxplot() 

#sampling and year combined, visualized by crop/treatment. 
ggplot(yield_yr_AS, aes(x = treatment, y = marketable_g)) + geom_boxplot() 

```


Overall: We consistently see that there is a significant difference in yield between years, so they will be analyzed separately
```{r}
# There is a significant difference for between BM and SM/CM, and year, but no interaction
# the assumptions are...somewhat met using the transformed dataset. assumptions are not met with the original dataset
aov <- aov(bc_marketable ~ treatment*year, data = yield_yr_AS)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

# If we try an LMM for the best AIC, we get the isSingular error
model <- lmer(bc_marketable ~ treatment*year + (1 | block), data = yield_yr_AS)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)
```

```{r}
#If we look at individual variables, there is not a significant difference for treatment
aov <- aov(bc_marketable ~ treatment, data = yield_yr_AS)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

kruskal.test(marketable_g ~ treatment, data = yield_yr_AS)

#year is always significant
aov <- aov(bc_marketable ~ year, data = yield_yr_AS)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

kruskal.test(marketable_g ~ year, data = yield_yr_AS)

# If we try an LMM for year, we get the isSingular error
model <- lmer(bc_marketable ~ year + (1 | block), data = yield_yr_AS)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ year)
```

2023 only
```{r}

# 2023: there was not a significant difference between mulch treatments for strawberry marketable yield. 
aov <- aov(marketable_g ~ treatment, data = yield_23_AS)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

kruskal.test(marketable_g ~ treatment, data = yield_23_AS)

# If we try an LMM, we get the isSingular error
model <- lmer(marketable_g ~ treatment + (1 | block), data = yield_23_AS)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)
```


2024 only
```{r}
# 2024: there are nearly significant differences between BM and CM/SM
aov <- aov(marketable_g ~ treatment, data = yield_24_AS)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

#nearly significant difference between BM and CM/SM
kruskal.test(marketable_g ~ treatment, data = yield_24_AS)
dunnTest(marketable_g ~ treatment, data = yield_24_AS)

# If we try an LMM, we get the isSingular error
model <- lmer(marketable_g ~ treatment + (1 | block), data = yield_24_AS)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```

##### Percent marketable

Visualizations
```{r}

#sampling combined, visualized by crop/treatment for each year
ggplot(yield_yr_AS, aes(x = year, y = per_market, fill = treatment)) + geom_boxplot() 

#sampling and year combined, visualized by crop/treatment. 
ggplot(yield_yr_AS, aes(x = treatment, y = per_market)) + geom_boxplot() 

```

The overall dataset is stubbornly non-parametric, so only KW tests are performed and years were analyzed separately
```{r}
# There is a significant difference between years
kruskal.test(per_market ~ year, data = yield_yr_AS)

# There is not a significant difference in percent marketable strawberry yield over both years
kruskal.test(per_market ~ treatment, data = yield_yr_AS)
```

2023 only: the dataset is normal, so we can do both ANOVA and KW. There are no significant differences between treatments
```{r}
#there is not a significant difference between treatments. model assumptions are met.
aov <- aov(per_market ~ treatment, data = yield_23_AS)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

# But still doing a KW, since 2024 is non-parametric. there is no difference between treatments
kruskal.test(per_market ~ treatment, data = yield_23_AS)

# If we try an LMM, there's still no differences between treatments and block is not a significant random effect
model <- lmer(per_market ~ treatment + (1 | block), data = yield_23_AS)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```


2024 only: The dataset is non-parametric, so only KW tests are performed
```{r}
# 2024: There was a significant difference between CM and BM for percent marketable strawberry yield

kruskal.test(per_market ~ treatment, data = yield_24_AS)
dunnTest(per_market ~ treatment, data = yield_24_AS)

```


##### Unmarketable yield

Visualization
```{r}
#sampling combined, visualized by crop/treatment for each year
ggplot(yield_yr_AS, aes(x = year, y = unmarketable_g, fill = treatment)) + geom_boxplot() 

#sampling and year combined, visualized by crop/treatment. 
ggplot(yield_yr_AS, aes(x = treatment, y = unmarketable_g)) + geom_boxplot() 

```
Overall, there was a significant difference between years but not treatments
```{r}
# There is a significant difference between years but not treatment. It's iffy whether the model assumptions are met
aov <- aov(bc_unmarketable ~ treatment*year, data = yield_yr_AS)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

# If we try an LMM for the best AIC, we get the isSingular error
model <- lmer(bc_unmarketable ~ treatment*year + (1 | block), data = yield_yr_AS)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ year)


```


```{r}
# Even when I look at year individually, there is a significant difference
aov <- aov(bc_unmarketable ~ year, data = yield_yr_AS)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

kruskal.test(unmarketable_g ~ year, data = yield_yr_AS)

# If we try an LMM for year, we also see a significant difference between years
model <- lmer(bc_unmarketable ~ year + (1 | block), data = yield_yr_AS)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ year)

# Even if I separate them into single predictor variables, there is no difference between treatments. 
aov <- aov(bc_unmarketable ~ treatment, data = yield_yr_AS)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

kruskal.test(unmarketable_g ~ treatment, data = yield_yr_AS)

# If we try an LMM for year, we get the isSingular error
model <- lmer(bc_unmarketable ~ treatment + (1 | block), data = yield_yr_AS)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)


```

2023 only: no differences

```{r}

# no significant difference
aov <- aov(unmarketable_g ~ treatment, data = yield_23_AS)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

kruskal.test(unmarketable_g ~ treatment, data = yield_23_AS)

# If we try an LMM, we get the isSingular error
model <- lmer(unmarketable_g ~ treatment + (1 | block), data = yield_23_AS)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)
```

2024 only: no significant differences, KW probably most reliable
```{r}
# no significant difference
aov <- aov(bc_unmarket ~ treatment, data = yield_24_AS)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

kruskal.test(unmarketable_g ~ treatment, data = yield_24_AS)

# If we try an LMM, we get the isSingular error
model <- lmer(bc_unmarket ~ treatment + (1 | block), data = yield_24_AS)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)
```


##### Total yield

Visualizations
```{r}
#sampling combined, visualized by crop/treatment for each year
ggplot(yield_yr_AS, aes(x = year, y = total_g, fill = treatment)) + geom_boxplot() 

#sampling and year combined, visualized by crop/treatment. 
ggplot(yield_yr_AS, aes(x = treatment, y = total_g)) + geom_boxplot() 

```

```{r}


# There was not a significant difference between mulch treatments for strawberry total yield in 2023 or 2024
kruskal.test(total_g ~ treatment, data = subset(yield_yr_AS, year == "2023"))
kruskal.test(total_g ~ treatment, data = subset(yield_yr_AS, year == "2024"))
dunnTest(total_g ~ treatment, data = subset(yield_yr_AS, year == "2024"))
```


Overall: the dataset is non-parametric, so only doing kruskal-wallis tests. There are no differences between treatments, but the years are significantly different
```{r}
# There is not a significant difference in total strawberry yield across both years
kruskal.test(total_g ~ treatment, data = yield_yr_AS)

# There is a significant difference between years for total yield
kruskal.test(total_g ~ year, data = yield_yr_AS)
```
2023 only: no significant differences
```{r}
# 2023: there is a significant difference between bare soil and the mulches
aov <- aov(total_g ~ treatment, data = yield_23_AS)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

# there is not a significant difference between treatments
kruskal.test(total_g ~ treatment, data = yield_23_AS)
dunnTest(total_g ~ treatment, data = yield_23_AS)

# If we try an LMM, we get the isSingular error
model <- lmer(total_g ~ treatment + (1 | block), data = yield_23_AS)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)
```

2024 only: mixed results, but ANOVA best reflects the figure
```{r}
# 2024: there is a significant difference between bare soil and the mulches
aov <- aov(total_g ~ treatment, data = yield_24_AS)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

# there is not a significant difference between treatments
kruskal.test(total_g ~ treatment, data = yield_24_AS)
dunnTest(total_g ~ treatment, data = yield_24_AS)

# If we try an LMM, we get the isSingular error
model <- lmer(total_g ~ treatment + (1 | block), data = yield_24_AS)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)
```

#### Beans

##### Marketable yield

Visualizations:
```{r}
#sampling combined, visualized by crop/treatment for each year
ggplot(subset(yield_yr, crop == "DB"), aes(x = year, y = marketable_g, fill = treatment)) + geom_boxplot()

#sampling and year combined, visualized by crop/treatment. 
ggplot(subset(yield_yr, crop == "DB"), aes(x = treatment, y = marketable_g)) + geom_boxplot()

```

Overall:

```{r}
# While the dataset is non-parametric, it seems to meet assumptions. I tried the boxcox transformed version (which is also not normally distributed), and it definitely did not meet assumptions. There is a difference between years, but not treatments 
aov <- aov(marketable_g ~ treatment*year, data = yield_yr_DB)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

# If we try an LMM for the best AIC, it shows some odd results (namely to do with one output saying there is a significant difference between BM and SM, and the other not)
model <- lmer(marketable_g ~ treatment*year + (1 | block), data = yield_yr_DB)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment*year)

```

```{r}
# I tried ANOVAs with treatment and with both original and transformed datsets, and none met model assumptions
# There is not a significant difference between treatments in marketable bean yield across both years
kruskal.test(marketable_g ~ treatment, data = yield_yr_DB)

# there is a significant difference between years. Tried the transformed data (which is also not normally distributed) as well, but it did not meet model assumptions
aov <- aov(marketable_g ~ year, data = yield_yr_DB)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

kruskal.test(marketable_g ~ year, data = yield_yr_DB)

# The LMM results in an isSingular error
model <- lmer(marketable_g ~ year + (1 | block), data = yield_yr_DB)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ year)

```



2023 only
```{r}

# 2023: there is a nearly significant difference between BM and SM
aov <- aov(marketable_g ~ treatment, data = yield_23_DB)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

kruskal.test(marketable_g ~ treatment, data = yield_23_DB)
dunnTest(marketable_g ~ treatment, data = yield_23_DB)

# If we try an LMM, we get the isSingular error
model <- lmer(marketable_g ~ treatment + (1 | block), data = yield_23_DB)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```


2024 only
```{r}
# there is no significant difference between treatments
aov <- aov(bc_marketable ~ treatment, data = yield_24_DB)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

kruskal.test(marketable_g ~ treatment, data = yield_24_DB)
dunnTest(marketable_g ~ treatment, data = yield_24_DB)

# LMM:
model <- lmer(bc_marketable ~ treatment + (1 | block), data = yield_24_DB)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```

##### Percent marketable

Visualizations:
```{r}

#sampling combined, visualized by crop/treatment for each year
ggplot(subset(yield_yr, crop == "DB"), aes(x = year, y = per_market, fill = treatment)) + geom_boxplot()

#sampling and year combined, visualized by crop/treatment. 
ggplot(subset(yield_yr, crop == "DB"), aes(x = treatment, y = per_market)) + geom_boxplot()

```
Overall: bare soil is less than mulches
```{r}
# There is a nearly significant difference in percent marketable bean yield over both years. Percent marketable is lower for bare soil than mulches
kruskal.test(per_market ~ treatment, data = yield_yr_DB)
dunnTest(per_market ~ treatment, data = yield_yr_DB)

# There is not a significant difference between years for percent marketable yield
kruskal.test(per_market ~ year, data = yield_yr_DB)
```

Individual years: literally 100% was marketable in 2023. In 2024, there's a difference between bare soil and straw mulch
```{r}
# 2023: Pretty sure everything was 100%
kruskal.test(per_market ~ treatment, data = yield_23_DB)

# 2024: Bare soil is significantly less than straw, nearly significantly less than cardboard
kruskal.test(per_market ~ treatment, data = yield_24_DB)
dunnTest(per_market ~ treatment, data =yield_24_DB)

```


##### Unmarketable yield

Visualizations:
```{r}
#sampling combined, visualized by crop/treatment for each year
ggplot(subset(yield_yr, crop == "DB"), aes(x = year, y = unmarketable_g, fill = treatment)) + geom_boxplot()

#sampling and year combined, visualized by crop/treatment. 
ggplot(subset(yield_yr, crop == "DB"), aes(x = treatment, y = unmarketable_g)) + geom_boxplot()

```

Overall:
```{r}
# There are nearly significant differences comparing BM and the mulches
kruskal.test(unmarketable_g ~ treatment, data = yield_yr_DB)
dunnTest(unmarketable_g ~ treatment, data = yield_yr_DB)

# There is not a significant difference between years for unmarketable yield
kruskal.test(unmarketable_g ~ year, data = yield_yr_DB)
```


Individual years
```{r}
# 2023: all 0
kruskal.test(unmarketable_g ~ treatment, data = yield_23_DB)

# 2024: 
kruskal.test(unmarketable_g ~ treatment, data = yield_24_DB)
dunnTest(unmarketable_g ~ treatment, data = yield_24_DB)
```
##### Total yield

Visualizations:
```{r}
#sampling combined, visualized by crop/treatment for each year
ggplot(yield_yr_DB, aes(x = year, y = total_g, fill = treatment)) + geom_boxplot()

#sampling and year combined, visualized by crop/treatment. 
ggplot(yield_yr_DB, aes(x = treatment, y = total_g)) + geom_boxplot()

```

Overall: Differences between years (same results as marketable yield)

```{r}
# While the dataset is non-parametric, it seems to meet assumptions. I tried the boxcox transformed version (which is also not normally distributed), and it definitely did not meet assumptions. There is a difference between years, but not treatments 
aov <- aov(total_g ~ treatment*year, data = yield_yr_DB)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

# If we try an LMM for the best AIC, it shows some odd results (namely to do with one output saying there is a significant difference between BM and SM, and the other not)
model <- lmer(total_g ~ treatment*year + (1 | block), data = yield_yr_DB)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```

Significant difference between years, not between treatments
```{r}
# I tried ANOVAs with treatment and with both original and transformed datsets, and none met model assumptions
# There is not a significant difference between treatments in total bean yield across both years
kruskal.test(total_g ~ treatment, data = yield_yr_DB)

# there is a significant difference between years. Tried the transformed data (which is also not normally distributed) as well, but it did not meet model assumptions
aov <- aov(total_g ~ year, data = yield_yr_DB)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

kruskal.test(total_g ~ year, data = yield_yr_DB)

# The LMM results in an isSingular error
model <- lmer(total_g ~ year + (1 | block), data = yield_yr_DB)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ year)

```


2023 only
```{r}

# 2023: there is a nearly significant difference between BM and SM
aov <- aov(total_g ~ treatment, data = yield_23_DB)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

kruskal.test(total_g ~ treatment, data = yield_23_DB)
dunnTest(total_g ~ treatment, data = yield_23_DB)

# If we try an LMM, we get the isSingular error
model <- lmer(total_g ~ treatment + (1 | block), data = yield_23_DB)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```


2024 only: no differences between treatments
```{r}
# there is no significant difference between treatments
aov <- aov(bc_total ~ treatment, data = yield_24_DB)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

kruskal.test(total_g ~ treatment, data = yield_24_DB)

# LMM:
model <- lmer(bc_total ~ treatment + (1 | block), data = yield_24_DB)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```


#### Collards

##### Marketable yield

Visualizations:
```{r}
#sampling combined, visualized by crop/treatment for each year
ggplot(yield_yr_FC, aes(x = year, y = marketable_g, fill = treatment)) + geom_boxplot()

#sampling and year combined, visualized by crop/treatment. 
ggplot(yield_yr_FC, aes(x = treatment, y = marketable_g)) + geom_boxplot()

```


Overall
```{r}
# There is not a significant difference in marketable collards yield across years or treatments
aov <- aov(marketable_g ~ treatment*year, data = yield_yr_FC)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

# If we try an LMM for the best AIC, we get the isSingular error
model <- lmer(marketable_g ~ treatment*year + (1 | block), data = yield_yr_FC)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```


```{r}

# I can check for interactions, because it's normally distributed - but there are none
aov <- aov(marketable_g ~ treatment, data = yield_yr_FC)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

kruskal.test(marketable_g ~ treatment, data = yield_yr_FC)

# If we try an LMM for treatment, we get the isSingular error
model <- lmer(marketable_g ~ treatment + (1 | block), data = yield_yr_FC)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

# There is NOT a significant difference between years for marketable yield
aov <- aov(marketable_g ~ year, data = yield_yr_FC)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

kruskal.test(marketable_g ~ year, data = yield_yr_FC)

# If we try an LMM for year, we get the isSingular error
model <- lmer(marketable_g ~ year + (1 | block), data = yield_yr_FC)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ year)

```

2023 only: 
```{r}

# 2023: there was not a significant difference between mulch treatments for collard marketable yield. 
aov <- aov(cubic_market ~ treatment, data = yield_23_FC)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

kruskal.test(marketable_g ~ treatment, data = yield_23_FC)

# If we try an LMM for treatment, we get the isSingular error
model <- lmer(cubic_market ~ treatment + (1 | block), data = yield_23_FC)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```


2024 only
```{r}

# 2024: 
aov <- aov(marketable_g ~ treatment, data = yield_24_FC)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

kruskal.test(marketable_g ~ treatment, data = subset(yield_yr_FC, year == "2024"))

# If we try an LMM for treatment, we get the isSingular error
model <- lmer(marketable_g ~ treatment + (1 | block), data = yield_24_FC)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```



##### Percent marketable

Visualizations:
```{r}

#sampling combined, visualized by crop/treatment for each year
ggplot(subset(yield_yr, crop == "FC"), aes(x = year, y = per_market, fill = treatment)) + geom_boxplot()

#sampling and year combined, visualized by crop/treatment. 
ggplot(subset(yield_yr, crop == "FC"), aes(x = treatment, y = per_market)) + geom_boxplot()

```




Overall
```{r}
# There is not a significant difference in percent marketable collards yield for treatment, but there is a difference between years
aov <- aov(per_market ~ treatment*year, data = yield_yr_FC)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

# If we try an LMM, block is not significant
model <- lmer(per_market ~ treatment*year + (1 | block), data = yield_yr_FC)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```


```{r}

# there is not a significant difference between treatments
aov <- aov(per_market ~ treatment, data = yield_yr_FC)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

kruskal.test(per_market ~ treatment, data = yield_yr_FC)

# If we try an LMM for treatment, we get the isSingular error
model <- lmer(per_market ~ treatment + (1 | block), data = yield_yr_FC)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

# There is a significant difference between years for percent marketable yield
aov <- aov(per_market ~ year, data = yield_yr_FC)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

kruskal.test(per_market ~ year, data = yield_yr_FC)

# If we try an LMM for year, block is not a significant random effect
model <- lmer(per_market ~ year + (1 | block), data = yield_yr_FC)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ year)

```

2023 only: 
```{r}

# no significant difference between treatments
aov <- aov(per_market ~ treatment, data = yield_23_FC)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

kruskal.test(per_market ~ treatment, data = yield_23_FC)

# If we try an LMM for treatment, block is not a significant random effect
model <- lmer(per_market ~ treatment + (1 | block), data = yield_23_FC)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```


2024 only
```{r}

# 2024: tried the transformed dataset as well, and it didn't make a huge difference in model quality
aov <- aov(per_market ~ treatment, data = yield_24_FC)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

kruskal.test(per_market ~ treatment, data = subset(yield_yr_FC, year == "2024"))

# If we try an LMM for treatment, we get the isSingular error
model <- lmer(per_market ~ treatment + (1 | block), data = yield_24_FC)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```


##### Unmarketable yield

Visualizations:
```{r}
#sampling combined, visualized by crop/treatment for each year
ggplot(yield_yr_FC, aes(x = year, y = unmarketable_g, fill = treatment)) + geom_boxplot()

#sampling and year combined, visualized by crop/treatment. 
ggplot(yield_yr_FC, aes(x = treatment, y = unmarketable_g)) + geom_boxplot()

```


Overall
```{r}
# honestly none of the distributions are great. there is a significant differences between years
aov <- aov(bc_unmarketable ~ treatment*year, data = yield_yr_FC)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)


# If we try an LMM, we get the isSingular error
model <- lmer(bc_unmarketable ~ treatment*year + (1 | block), data = yield_yr_FC)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```


```{r}
# there is not a significant difference between treatments
aov <- aov(bc_unmarketable ~ treatment, data = yield_yr_FC)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

kruskal.test(unmarketable_g ~ treatment, data = yield_yr_FC)

# If we try an LMM for treatment, block is not a significant random effect
model <- lmer(bc_unmarketable ~ treatment + (1 | block), data = yield_yr_FC)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

# There is NOT a significant difference between years for marketable yield
aov <- aov(bc_unmarketable ~ year, data = yield_yr_FC)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

kruskal.test(unmarketable_g ~ year, data = yield_yr_FC)

# If we try an LMM for year, we get the isSingular error
model <- lmer(bc_unmarketable ~ year + (1 | block), data = yield_yr_FC)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ year)

```

2023 only: 
```{r}

# no difference between treatments 
aov <- aov(cubic_unmarketable ~ treatment, data = yield_23_FC)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

kruskal.test(unmarketable_g ~ treatment, data = yield_23_FC)

# If we try an LMM for treatment, we get a convergence error
model <- lmer(cubic_unmarketable ~ treatment + (1 | block), data = yield_23_FC)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```


2024 only
```{r}

# No difference between treatments 
aov <- aov(unmarketable_g ~ treatment, data = yield_24_FC)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

kruskal.test(unmarketable_g ~ treatment, data = subset(yield_yr_FC, year == "2024"))

# If we try an LMM for treatment, block is not a significant random effect
model <- lmer(unmarketable_g ~ treatment + (1 | block), data = yield_24_FC)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```




##### Total yield

Visualizations:
```{r}
#sampling combined, visualized by crop/treatment for each year
ggplot(yield_yr_FC, aes(x = year, y = total_g, fill = treatment)) + geom_boxplot()

#sampling and year combined, visualized by crop/treatment. 
ggplot(yield_yr_FC, aes(x = treatment, y = total_g)) + geom_boxplot()

```



Overall
```{r}
# There is not a significant difference in treatment, but there is between years
aov <- aov(total_g ~ treatment*year, data = yield_yr_FC)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

# If we try an LMM, we don't see the difference between years
model <- lmer(total_g ~ treatment*year + (1 | block), data = yield_yr_FC)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```


```{r}

# no difference between treatments
aov <- aov(total_g ~ treatment, data = yield_yr_FC)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

kruskal.test(total_g ~ treatment, data = yield_yr_FC)

# If we try an LMM for treatment, we get the isSingular error
model <- lmer(total_g ~ treatment + (1 | block), data = yield_yr_FC)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

# There is a significant difference between years
aov <- aov(total_g ~ year, data = yield_yr_FC)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

kruskal.test(total_g ~ year, data = yield_yr_FC)

# If we try an LMM for year, block is not a significant random effect
model <- lmer(total_g ~ year + (1 | block), data = yield_yr_FC)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ year)

```

2023 only: 
```{r}

# no difference between treatments
aov <- aov(cubic_total ~ treatment, data = yield_23_FC)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

kruskal.test(total_g ~ treatment, data = yield_23_FC)

# If we try an LMM for treatment, we get the isSingular error
model <- lmer(cubic_total ~ treatment + (1 | block), data = yield_23_FC)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```


2024 only
```{r}

# 2024: no treatment differences
aov <- aov(total_g ~ treatment, data = yield_24_FC)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

kruskal.test(total_g ~ treatment, data = subset(yield_yr_FC, year == "2024"))

# If we try an LMM for treatment, block is not a significant random effect
model <- lmer(total_g ~ treatment + (1 | block), data = yield_24_FC)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```

## Foliar Chlorophyll


#### For manuscript

##### Statistical Analysis

Strawberries
```{r}
# Overall
# NOW, if I try an LMM with date_collected as the random effect, I get a better quality model - and year is no longer a significant predictor, though there are some interaction effects that I don't think I'm really interested in AIC 5927
model <- lmer(value ~ treatment*year + (1 | date_collected/block), data = spad_AS)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)


# In 2023, bare soil was significantly different from straw and cardboard. 
# rANOVA indicates that block is a significant random effect (p = 0.006) for 2023. emmeans shows that bare soil is significantly different from cardboard mulch (p = 0.03)
model <- lmer(value ~ treatment + (1 | date_collected/block), data = spad_23_AS)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

# In 2024, there was not a significant difference between treatments. Running it with outliers included does not substantively change the results (though the dataset definitely does NOT meet ANOVA model assumptions) 
aov <- aov(value ~ treatment, data = spad_24_AS)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)



```


Beans
```{r}
#While the dataset is not normally distributed according to the Shapiro-Wilk, it does look like it meets model assumptions here, at least in the way these often do
aov <- aov(value ~ treatment*year, data = spad_DB)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

# 2023 - LMM: no differences
model <- lmer(value ~ treatment + (1 | date_collected), data = spad_23_DB)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

# 2024: LMM: date_collected is a significant RE. We also start to see a potential difference between bare soil and cardboard mulch. Including outliers does change the result = there is also a difference between bare soil and straw
model <- lmer(value ~ treatment + (1 | date_collected), data = spad_24_DB)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```

```{r}
# Overall if I try an LMM with date_collected as the random effect, I get a better quality model - year is still significant, though there are some interaction effects that I don't think I'm really interested in
model <- lmer(value ~ treatment*year + (1 | date_collected/block), data = spad_FC)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ year)

#2023 ANOVA: no differences
aov <- aov(value ~ treatment, data = spad_23_FC)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

# 2024 ANOVA: no differences
aov <- aov(value ~ treatment, data = spad_24_FC)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

```

##### Figures and Tables


```{r}
# average and SD
sum_stat_spad <- spad %>%
                    group_by(year, crop, treatment) %>%
                    summarize(min_spad = mean(value, na.rm = TRUE),
                              median_spad = median(value, na.rm = TRUE),
                              max_spad = max(value, na.rm = TRUE),
                              avg_spad = mean(value, na.rm = TRUE),
                              sd_spad = sd(value, na.rm = TRUE))

write.csv(sum_stat_spad, here::here("20250813_SCM_spad.csv"), row.names=TRUE)


# SPAD

ggplot(spad, aes(x = year, 
                   y = value, 
                   fill = treatment)) + 
  geom_boxplot() + 
  theme_bw() + 
  ylab("SPAD Value") +
  facet_wrap(~crop, scales = "free_y", labeller = as_labeller(c(AS = "Strawberries", DB = "Beans", FC = "Collards"))) +
  theme(axis.title.y = element_text(vjust = 3),
        axis.title.x = element_blank(),
        axis.text.x = element_text(angle = 45, hjust = 1)) +
  scale_fill_manual(name = "Mulch Treatment", 
                    labels = c("Bare soil", "Shredded Cardboard", "Straw"), 
                    values = c("#A6CEE3", "#6A3D9A", "#CAB2D6")) 

ggsave("20250812_SCM_spad.png")


ggplot(spad, aes(x = as.factor(date_collected), 
                   y = value, 
                   fill = treatment)) + 
  geom_boxplot() + 
  theme_bw() + 
  facet_wrap(~crop, scales = "free_y", labeller = as_labeller(c(AS = "Strawberries", DB = "Beans", FC = "Collards"))) +
  ylab("SPAD value") +
  theme(axis.title.y = element_text(vjust = 3),
        axis.title.x = element_blank(),
        legend.position = "top",
        axis.text.x = element_text(angle = 45, hjust = 1)) +
  scale_fill_manual(name = "Mulch Treatment", 
                    labels = c("Bare soil", "Shredded Cardboard", "Straw"), 
                    values = c("#A6CEE3", "#6A3D9A", "#CAB2D6")) 

ggsave("20250813_SCM_spad_week.png", width = 9, height = 6)

```

### Visualization

Most relevant visual for my analysis thus far

```{r}

#sampling combined, visualized by crop/treatment for each year
ggplot(spad_AS, aes(x = as.factor(date_collected), y = value, fill = treatment)) + geom_boxplot()  + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(spad_DB, aes(x = as.factor(date_collected), y = value, fill = treatment)) + geom_boxplot() + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(spad_FC, aes(x = as.factor(date_collected), y = value, fill = treatment)) + geom_boxplot() + theme(axis.text.x = element_text(angle = 45, hjust = 1))

#checking whether outliers make a difference in trends. Visually, it does not change trends - just, like, decreased amplitude, especially for collards. However, medians appear to generally stay the same regardless of whether outliers are excluded or included
ggplot(spad_AS_out, aes(x = as.factor(date_collected), y = value, fill = treatment)) + geom_boxplot()  + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(spad_DB_out, aes(x = as.factor(date_collected), y = value, fill = treatment)) + geom_boxplot() + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(spad_FC_out, aes(x = as.factor(date_collected), y = value, fill = treatment)) + geom_boxplot() + theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

Other visualizations

```{r}

#visualized each year separately, by sampling for each crop/treatment
ggplot(subset(spad, year == 2023), aes(x = sampling, y = value, fill = treatment)) + geom_boxplot() + facet_wrap(~crop)
ggplot(subset(spad, year == 2024), aes(x = sampling, y = value, fill = treatment)) + geom_boxplot() + facet_wrap(~crop)

#years combined, visualized by sampling for each crop/treatment. REVISE THIS LATER, since there are a different number of sampling dates in each year
ggplot(spad, aes(x = sampling, y = value, fill = treatment)) + geom_boxplot() + facet_wrap(~crop)

#sampling and year combined, visualized by crop/treatment. 
ggplot(spad, aes(x = crop, y = value, fill = treatment)) + geom_boxplot()

#crops combined, year visualized by sampling/treatment
ggplot(spad, aes(x = sampling, y = value, fill = treatment)) + geom_boxplot() + facet_wrap(~year)

#treatments combined, year visualized by sampling/crop
ggplot(spad, aes(x = sampling, y = value, fill = crop)) + geom_boxplot() + facet_wrap(~year)

#crops and sampling combined, visualized by treatment for each year
ggplot(spad, aes(x = year, y = value, fill = treatment)) + geom_boxplot()

#treatments and sampling combined, visualized by crop for each year
ggplot(spad, aes(x = year, y = value, fill = crop)) + geom_boxplot()

# just treatments
ggplot(spad, aes(x = treatment, y = value)) + geom_boxplot()

#just crops
ggplot(spad, aes(x = crop, y = value)) + geom_boxplot()
```


### Pre-analysis

This was me running some initial tests before my meeting with Nora and Mary
```{r}
#across the whole data set, there is a difference between crops
kruskal.test(value ~ year, data = spad)
kruskal.test(value ~ treatment, data = spad)
kruskal.test(value ~ crop, data = spad)

#within each crop, there is a difference between years
kruskal.test(value ~ year, data = subset(spad, crop == "AS"))
kruskal.test(value ~ year, data = subset(spad, crop == "DB"))
kruskal.test(value ~ year, data = subset(spad, crop == "FC"))

#within each crop, there is only a difference between treatments for AS
kruskal.test(value ~ treatment, data = subset(spad, crop == "AS"))
kruskal.test(value ~ treatment, data = subset(spad, crop == "DB"))
kruskal.test(value ~ treatment, data = subset(spad, crop == "FC"))


#within a crop-year combination, there is a significant difference between treatments for AS in 2023, between DB in 2024, and between FC in 2024
kruskal.test(value ~ treatment, data = subset(spad, crop == "AS" & year == "2023"))
kruskal.test(value ~ treatment, data = subset(spad, crop == "AS" & year == "2024"))

kruskal.test(value ~ treatment, data = subset(spad, crop == "DB" & year == "2023"))
kruskal.test(value ~ treatment, data = subset(spad, crop == "DB" & year == "2024"))

kruskal.test(value ~ treatment, data = subset(spad, crop == "DB" & year == "2023"))
kruskal.test(value ~ treatment, data = subset(spad, crop == "DB" & year == "2024"))

```
### Analysis

#### Strawberries

##### Overall
Now there are significant differences between the years, after removing 8/24/2023
```{r}
#While the dataset is not normally distributed according to the Shapiro-Wilk, it does look like it meets model assumptions here. Across the whole data set, there is an interaction between treatment and year, and both treatment and year are significantly different. AIC 6224
aov <- aov(value ~ treatment*year, data = spad_AS)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

# If we try an LMM, we see the same results as the ANOVA, but the SM-CM difference is now significant, But, the model does not meet assumptions
model <- lmer(value ~ treatment*year + (1 | block), data = spad_AS)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)


# NOW, if I try an LMM with date_collected as the random effect, I get a better quality model - and year is no longer a significant predictor, though there are some interaction effects that I don't think I'm really interested in AIC 5927
model <- lmer(value ~ treatment*year + (1 | date_collected/block), data = spad_AS)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```

Now that we see that year isn't a great fixed effect when we use date_collected as a random effect, then we actually get the highest quality model that really shows the difference between CM and BM/SM

```{r}
# I could still include year here, technically, because it contributes treatment:year interactions, but year itself doesn't have a significant impact
model <- lmer(value ~ treatment*year + (1 | block), data = spad_AS)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment*year)

# KW test finds similar difference between treatments, though the CM-SM isn't significant
kruskal.test(value ~ treatment, data = spad_AS)
dunnTest(value ~ treatment, data = spad_AS)

```


If I repeat these tests with the dataframe including outliers, it does not substantively change the results. It does show a larger difference between CM and bare soil, though I don't think that best represents the data
```{r}

#LMM
model <- lmer(value ~ treatment + (1 | date_collected/block), data = spad_AS_out)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

#KW
kruskal.test(value ~ treatment, data = spad_AS_out)
dunnTest(value ~ treatment, data = spad_AS_out)
```

##### 2023 only
```{r}
# In 2023, bare soil was significantly different from straw and cardboard. 
aov <- aov(value ~ treatment, data = spad_23_AS)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

aov <- aov(bc_value ~ treatment, data = spad_23_AS)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

kruskal.test(value ~ treatment, data = spad_23_AS)
dunnTest(value ~ treatment, data = spad_23_AS)
```

```{r}
# rANOVA indicates that block is a significant random effect (p = 0.006) for 2023. emmeans shows that bare soil is significantly different from cardboard mulch (p = 0.001) and nearly straw mulch (p = 0.05)
model <- lmer(value ~ treatment + (1 | block), data = spad_23_AS)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

# repeating with the transformed dataset
model <- lmer(bc_value ~ treatment + (1 | block), data = spad_23_AS)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)
```

Sampling is significant as a random effect in 2023, and using the transformed dataset allows us to see a significant difference between bare soil and straw mulch, in addition to BM-CM.

```{r}
#LMM with original dataset
model <- lmer(value ~ treatment + (1 | date_collected), data = spad_23_AS)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)


#LMM with transformed dataset
model <- lmer(bc_value ~ treatment + (1 | date_collected), data = spad_23_AS)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```


```{r}
#LMM with original dataset
model <- lmer(value ~ treatment + (1 | date_collected/block), data = spad_23_AS)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

#LMM with transformed dataset
model <- lmer(bc_value ~ treatment + (1 | date_collected/block), data = spad_23_AS)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

#LMM with transformed dataset, including outliers
model <- lmer(bc_value ~ treatment + (1 | date_collected/block), data = spad_23_AS_out)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```
###### Sampling Point 1
No differences between treatments
```{r}

# ANOVA (tried with the untransformed data as well, same overall results). 
aov <- aov(bc_value ~ treatment, data = subset(spad_23_AS, sampling == 1))
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

#KW. Using the dataset with outliers does not change the result
kruskal.test(value ~ treatment, data = subset(spad_23_AS, sampling == 1))
dunnTest(value ~ treatment, data = subset(spad_23_AS, sampling == 1))

#LMM - block is not a significant random effect
model <- lmer(bc_value ~ treatment + (1 | block), data = subset(spad_23_AS,sampling == 1))
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```


###### Sampling Point 2

```{r}

# ANOVA bare soil is significantly different from cardboard and straw. Including outliers does not substantively change the result
aov <- aov(bc_value ~ treatment, data = subset(spad_23_AS, sampling == 2))
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

# KW. Including outliers does not substantively change the result
kruskal.test(value ~ treatment, data = subset(spad_23_AS, sampling == 2))
dunnTest(value ~ treatment, data = subset(spad_23_AS, sampling == 2))

# LMM: Including outliers does not substantively change the result
model <- lmer(bc_value ~ treatment + (1 | block), data = subset(spad_23_AS_out, sampling == 2))
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)


```


###### Sampling Point 3

```{r}

# ANOVA: cardboard is significantly different from bare soil and straw. Including outliers doesn't substantively change the result. Interesting, it does decrease the AIC
aov <- aov(bc_value ~ treatment, data = subset(spad_23_AS_out, sampling == 3))
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

#KW. Including outliers doesn't substantively change the result. 
kruskal.test(value ~ treatment, data = subset(spad_23_AS, sampling == 3))
dunnTest(value ~ treatment, data = subset(spad_23_AS, sampling == 3))

#LMM. Including outliers doesn't substantively change the result. 
model <- lmer(bc_value ~ treatment + (1 | block), data = subset(spad_23_AS_out, sampling == 3))
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)


```


###### Sampling Point 4

```{r}

# ANOVA: cardboard is significantly different from bare soil (and nearly so from straw). Including outliers does not substantively change the results
aov <- aov(bc_value ~ treatment, data = subset(spad_23_AS, sampling == 4))
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

#KW. Including outliers does not substantively change the results
kruskal.test(value ~ treatment, data = subset(spad_23_AS, sampling == 4))
dunnTest(value ~ treatment, data = subset(spad_23_AS, sampling == 4))


#LMM: Including outliers does not substantively change the results
model <- lmer(bc_value ~ treatment + (1 | block), data = subset(spad_23_AS, sampling == 4))
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```


###### Sampling Point 5

```{r}

# ANOVA:  no significant difference between treatments. Including outliers does not substantively change the results
aov <- aov(bc_value ~ treatment, data = subset(spad_23_AS, sampling == 5))
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

#KW: Including outliers does not substantively change the results
kruskal.test(value ~ treatment, data = subset(spad_23_AS, sampling == 5))
dunnTest(value ~ treatment, data = subset(spad_23_AS, sampling == 5))

#LMM: Including outliers does not substantively change the results
model <- lmer(bc_value ~ treatment + (1 | block), data = subset(spad_23_AS, sampling == 5))
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```


###### Sampling Point 6

```{r}

# ANOVA:  straw mulch is significantly different from cardboard and nearly from bare soil. It outliers are included, the differences become significant
aov <- aov(bc_value ~ treatment, data = subset(spad_23_AS, sampling == 6))
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

#KW: Including outliers does not substantively change the results
kruskal.test(value ~ treatment, data = subset(spad_23_AS, sampling == 6))
dunnTest(value ~ treatment, data = subset(spad_23_AS, sampling == 6))

#LMM: isSingular error
model <- lmer(bc_value ~ treatment + (1 | block), data = subset(spad_23_AS, sampling == 6))
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```


##### 2024 only
```{r}
# In 2024, there was not a significant difference between treatments. Running it with outliers included does not substantively change the results (though the dataset definitely does NOT meet ANOVA model assumptions) 
aov <- aov(value ~ treatment, data = spad_24_AS)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

kruskal.test(value ~ treatment, data = spad_24_AS)
dunnTest(value ~ treatment, data = spad_24_AS)
```


Block is not a significant random effect for 2024
```{r}
model <- lmer(value ~ treatment + (1 | block), data = spad_24_AS)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```


```{r}
model <- lmer(value ~ treatment + (1 | date_collected), data = spad_24_AS)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```


```{r}
model <- lmer(bc_value ~ treatment + (1 | sampling/block), data = spad_24_AS)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```



###### Sampling Point 1

straw was significantly different from bare soil and cardboard
```{r}
# ANOVA: straw was significantly different from bare soil and cardboard
aov <- aov(value ~ treatment, data = subset(spad_24_AS, sampling == 1))
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot()

#KW. Including outliers does not substantively change the result
kruskal.test(value ~ treatment, data = subset(spad_24_AS, sampling == 1))
dunnTest(value ~ treatment, data = subset(spad_24_AS, sampling == 1))

#LMM
model <- lmer(value ~ treatment + (1 | block), data = subset(spad_24_AS, sampling == 1))
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```

###### Sampling Point 2

cardboard is significantly different from bare soil and straw
```{r}
# ANOVA: cardboard was significantly different from bare soil and straw
aov <- aov(value ~ treatment, data = subset(spad_24_AS, sampling == 2))
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

#KW: Including outliers does not substantively change the result
kruskal.test(value ~ treatment, data = subset(spad_24_AS, sampling == 2))
dunnTest(value ~ treatment, data = subset(spad_24_AS_out, sampling == 2))

#LMM
model <- lmer(value ~ treatment + (1 | block), data = subset(spad_24_AS, sampling == 2))
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```


###### Sampling Point 3

no significant difference between treatments
```{r}

# ANOVA: no significant differences between treatments
aov <- aov(value ~ treatment, data = subset(spad_24_AS, sampling == 3))
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

#KW: including outliers does not change result
kruskal.test(value ~ treatment, data = subset(spad_24_AS, sampling == 3))
dunnTest(value ~ treatment, data = subset(spad_24_AS, sampling == 3))

#LMM: 
model <- lmer(value ~ treatment + (1 | block), data = subset(spad_24_AS, sampling == 3))
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```

###### Sampling Point 4

no significant difference between treatments
```{r}

# ANOVA: no significant differences between treatments
aov <- aov(value ~ treatment, data = subset(spad_24_AS, sampling == 4))
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

#KW
kruskal.test(value ~ treatment, data = subset(spad_24_AS, sampling == 4))
dunnTest(value ~ treatment, data = subset(spad_24_AS, sampling == 4))

#LMM
model <- lmer(value ~ treatment + (1 | block), data = subset(spad_24_AS, sampling == 4))
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```


###### Sampling Point 5

```{r}

# ANOVA: 
aov <- aov(value ~ treatment, data = subset(spad_24_AS, sampling == 5))
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

#kw
kruskal.test(value ~ treatment, data = subset(spad_24_AS, sampling == 5))
dunnTest(value ~ treatment, data = subset(spad_24_AS, sampling == 5))

#LMM
model <- lmer(value ~ treatment + (1 | block), data = subset(spad_24_AS, sampling == 5))
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```


#### Beans

##### Overall

```{r}
#While the dataset is not normally distributed according to the Shapiro-Wilk, it does look like it meets model assumptions here, at least in the way these often do
aov <- aov(value ~ treatment*year, data = spad_DB)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

# If we try an LMM, SM and CM are still sig different. Doesn't seem to meet model assumptions
model <- lmer(value ~ treatment*year + (1 | block), data = spad_DB)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)


# NOW, if I try an LMM with date_collected as the random effect, I get a better quality model - and year is no longer a significant predictor, though there are some interaction effects that I don't think I'm really interested in
model <- lmer(value ~ treatment*year + (1 | date_collected/block), data = spad_DB)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```

Checking to see what the model quality is if year is removed, and it has a higher AIC.

```{r}
# I could still include year here, technically, because it contributes treatment:year interactions, but year itself doesn't have a significant impact
model <- lmer(bc_value ~ treatment + (1 | date_collected/block), data = spad_DB)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

# KW test finds similar difference between treatments, though the CM-SM isn't significant. 
kruskal.test(value ~ treatment, data = spad_DB)
dunnTest(value ~ treatment, data = spad_DB)

# KW test affirms the difference between years, though.
kruskal.test(value ~ year, data = spad_DB)

```

##### 2023 only
```{r}
# ANOVA: no differences, iffy whether model assumptions are met
aov <- aov(value ~ treatment, data = spad_23_DB)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

# KW: no differences. I also ran this with outliers included, and it didn't substantially change the results
kruskal.test(value ~ treatment, data = spad_23_DB)

# LMM: no differences, block is not a significant RE
model <- lmer(value ~ treatment + (1 | block), data = spad_23_DB)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)
```


Sampling is significant as a random effect in 2023, but there are still no differences between treatments 

```{r}
#LMM: date_collected is a significant RE, but still no differences between treatments
model <- lmer(value ~ treatment + (1 | date_collected), data = spad_23_DB)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)


#LMM with both RE's - both significant. I also ran this with outliers included, and it didn't substantially change the results
model <- lmer(value ~ treatment + (1 | date_collected/block), data = spad_23_DB)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```


###### Sampling Point 1
CM is significantly higher than bare soil
```{r}

# ANOVA:
aov <- aov(value ~ treatment, data = subset(spad_23_DB, sampling == 1))
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

#KW. Using the dataset with outliers does not change the result
kruskal.test(value ~ treatment, data = subset(spad_23_DB, sampling == 1))
dunnTest(value ~ treatment, data = subset(spad_23_DB, sampling == 1))

#LMM:
model <- lmer(value ~ treatment + (1 | block), data = subset(spad_23_DB,sampling == 1))
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```


###### Sampling Point 2

```{r}

# ANOVA 
aov <- aov(value ~ treatment, data = subset(spad_23_DB, sampling == 2))
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

# KW. Including outliers does not substantively change the result
kruskal.test(value ~ treatment, data = subset(spad_23_DB, sampling == 2))

# LMM: 
model <- lmer(value ~ treatment + (1 | block), data = subset(spad_23_DB, sampling == 2))
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)


```


###### Sampling Point 3

```{r}

# ANOVA: 
aov <- aov(value ~ treatment, data = subset(spad_23_DB, sampling == 3))
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

#KW. Including outliers doesn't substantively change the result. 
kruskal.test(value ~ treatment, data = subset(spad_23_DB, sampling == 3))
dunnTest(value ~ treatment, data = subset(spad_23_DB, sampling == 3))

#LMM. 
model <- lmer(value ~ treatment + (1 | block), data = subset(spad_23_DB, sampling == 3))
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)


```


###### Sampling Point 4

```{r}

# ANOVA: 
aov <- aov(value ~ treatment, data = subset(spad_23_DB, sampling == 4))
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

#KW. Including outliers does not substantively change the results
kruskal.test(value ~ treatment, data = subset(spad_23_DB, sampling == 4))
dunnTest(value ~ treatment, data = subset(spad_23_DB, sampling == 4))


#LMM: 
model <- lmer(value ~ treatment + (1 | block), data = subset(spad_23_DB, sampling == 4))
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```


###### Sampling Point 5

```{r}

# ANOVA:  
aov <- aov(value ~ treatment, data = subset(spad_23_DB, sampling == 5))
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

#KW: Including outliers does not substantively change the results
kruskal.test(value ~ treatment, data = subset(spad_23_DB, sampling == 5))
dunnTest(value ~ treatment, data = subset(spad_23_DB, sampling == 5))

#LMM: 
model <- lmer(value ~ treatment + (1 | block), data = subset(spad_23_DB, sampling == 5))
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```


###### Sampling Point 6

```{r}

# ANOVA:  
aov <- aov(value ~ treatment, data = subset(spad_23_DB, sampling == 6))
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

#KW: Including outliers does not substantively change the results
kruskal.test(value ~ treatment, data = subset(spad_23_DB, sampling == 6))
dunnTest(value ~ treatment, data = subset(spad_23_DB, sampling == 6))

#LMM: 
model <- lmer(value ~ treatment + (1 | block), data = subset(spad_23_DB, sampling == 6))
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```



##### 2024 only
```{r}
# Both show that straw and cardboard are significantly different

# ANOVA
aov <- aov(value ~ treatment, data = spad_24_DB)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

#KW. I also tried including the outliers, and it doesn't change the result 
kruskal.test(value ~ treatment, data = spad_24_DB)
dunnTest(value ~ treatment, data = spad_24_DB_out)


```


Block is not a significant random effect for 2024
```{r}
# LMM: isSingular error
model <- lmer(value ~ treatment + (1 | block), data = spad_24_DB)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

# LMM: date_collected is a significant RE. We also start to see a potential difference between bare soil and cardboard mulch
model <- lmer(value ~ treatment + (1 | date_collected), data = spad_24_DB)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

# LMM: Difference between bare soil and cardboard mulch still nearly significant. BUT, including outliers DOES change the results: difference between BM-CM disappers and instead there's a difference between BM and SM, which seems more likely
model <- lmer(value ~ treatment + (1 | sampling/block), data = spad_24_DB_out)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```


###### Sampling Point 1

2024: cardboard is significantly different from bare soil and straw mulch
```{r}

# ANOVA
aov <- aov(value ~ treatment, data = subset(spad_24_DB, sampling == 1))
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

#KW. Including outliers does not change results
kruskal.test(value ~ treatment, data = subset(spad_24_DB, sampling == 1))
dunnTest(value ~ treatment, data = subset(spad_24_DB, sampling == 1))

#LMM
model <- lmer(value ~ treatment + (1 | block), data = subset(spad_24_DB, sampling == 1))
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```

###### Sampling Point 2

no significant difference between treatments
```{r}

#ANOVA
aov <- aov(value ~ treatment, data = subset(spad_24_DB, sampling == 2))
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

#KW: including outliers doesn't change the result
kruskal.test(value ~ treatment, data = subset(spad_24_DB, sampling == 2))
dunnTest(value ~ treatment, data = subset(spad_24_DB, sampling == 2))

#LMM
model <- lmer(value ~ treatment + (1 | block), data = subset(spad_24_DB, sampling == 2))
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```

###### Sampling Point 3

no significant difference between treatments
```{r}

# ANOVA
aov <- aov(value ~ treatment, data = subset(spad_24_DB, sampling == 3))
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

#KW: Including outliers does not changethe result
kruskal.test(value ~ treatment, data = subset(spad_24_DB, sampling == 3))
dunnTest(value ~ treatment, data = subset(spad_24_DB_out, sampling == 3))

#LMM
model <- lmer(value ~ treatment + (1 | block), data = subset(spad_24_DB, sampling == 3))
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```
###### Sampling Point 4


2024: SM is significantly different from CM and BM according to ANOVA, but not KW
```{r}

# ANOVA
aov <- aov(value ~ treatment, data = subset(spad_24_DB, sampling == 4))
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

#KW: including outliers decreases the significant, making straw only nealry significant with bare soil
kruskal.test(value ~ treatment, data = subset(spad_24_DB, sampling == 4))
dunnTest(value ~ treatment, data = subset(spad_24_DB, sampling == 4))

#LMM
model <- lmer(value ~ treatment + (1 | block), data = subset(spad_24_DB, sampling == 4))
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```

###### Sampling Point 5

2024: very conflicted
```{r}

# ANOVA
aov <- aov(value ~ treatment, data = subset(spad_24_DB, sampling == 5))
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

#KW: Including outliers means there is absolutely no difference between treatments
kruskal.test(value ~ treatment, data = subset(spad_24_DB, sampling == 5))
dunnTest(value ~ treatment, data = subset(spad_, sampling == 5))

#LMM
model <- lmer(value ~ treatment + (1 | block), data = subset(spad_24_DB, sampling == 5))
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```

### Collards



##### Overall

```{r}
# only a difference between years. 
aov <- aov(value ~ treatment*year, data = spad_FC)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

# only a difference between years. Block is not a significant random effect
model <- lmer(value ~ treatment*year + (1 | block), data = spad_FC)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)


# NOW, if I try an LMM with date_collected as the random effect, I get a better quality model - year is still significant, though there are some interaction effects that I don't think I'm really interested in
model <- lmer(value ~ treatment*year + (1 | date_collected/block), data = spad_FC)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ year)

```



```{r}
# I could still include year here, technically, because it contributes treatment:year interactions, but year itself doesn't have a significant impact
model <- lmer(value ~ treatment + (1 | date_collected/block), data = spad_FC)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

# KW no differences between treatments. Including outliers does not change results 
kruskal.test(value ~ treatment, data = spad_FC)
dunnTest(value ~ treatment, data = spad_FC)

# KW test affirms the difference between years, though.
kruskal.test(value ~ year, data = spad_FC)

```

##### 2023 only
```{r}
# ANOVA: no differences
aov <- aov(value ~ treatment, data = spad_23_FC)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

# KW:  no differences. I also ran this with outliers included, and it didn't substantially change the results
kruskal.test(value ~ treatment, data = spad_23_FC_out)

# LMM: no differences. block is not a significant RE
model <- lmer(value ~ treatment + (1 | block), data = spad_23_FC)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)
```

```{r}
#LMM: no differences. sampling is a significant randome effect
model <- lmer(value ~ treatment + (1 | date_collected), data = spad_23_FC)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)


#LMM with both RE's - only date is significant. I also ran this with outliers included, and it didn't substantially change the results
model <- lmer(value ~ treatment + (1 | date_collected/block), data = spad_23_FC)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```

###### Sampling Point 1

```{r}

# ANOVA:
aov <- aov(value ~ treatment, data = subset(spad_23_FC, sampling == 1))
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

#KW. Using the dataset with outliers does not change the result
kruskal.test(value ~ treatment, data = subset(spad_23_FC, sampling == 1))
dunnTest(value ~ treatment, data = subset(spad_23_FC, sampling == 1))

#LMM: block is not a significant RE
model <- lmer(value ~ treatment + (1 | block), data = subset(spad_23_FC,sampling == 1))
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```


###### Sampling Point 2

```{r}

# ANOVA 
aov <- aov(value ~ treatment, data = subset(spad_23_FC, sampling == 2))
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

# KW. Including outliers does not substantively change the result
kruskal.test(value ~ treatment, data = subset(spad_23_FC, sampling == 2))

# LMM: 
model <- lmer(value ~ treatment + (1 | block), data = subset(spad_23_FC, sampling == 2))
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)


```


###### Sampling Point 3

```{r}

# ANOVA: 
aov <- aov(value ~ treatment, data = subset(spad_23_FC, sampling == 3))
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

#KW. Including outliers doesn't substantively change the result. 
kruskal.test(value ~ treatment, data = subset(spad_23_FC, sampling == 3))
dunnTest(value ~ treatment, data = subset(spad_23_FC, sampling == 3))

#LMM. 
model <- lmer(value ~ treatment + (1 | block), data = subset(spad_23_FC, sampling == 3))
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)


```


###### Sampling Point 4

```{r}

# ANOVA: 
aov <- aov(value ~ treatment, data = subset(spad_23_FC, sampling == 4))
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

#KW. Including outliers does not substantively change the results
kruskal.test(value ~ treatment, data = subset(spad_23_FC, sampling == 4))
dunnTest(value ~ treatment, data = subset(spad_23_FC, sampling == 4))


#LMM: block is not a significant RE
model <- lmer(value ~ treatment + (1 | block), data = subset(spad_23_FC, sampling == 4))
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```


###### Sampling Point 5

```{r}

# ANOVA:  
aov <- aov(value ~ treatment, data = subset(spad_23_FC, sampling == 5))
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

#KW: Including outliers does not substantively change the results
kruskal.test(value ~ treatment, data = subset(spad_23_FC, sampling == 5))
dunnTest(value ~ treatment, data = subset(spad_23_FC, sampling == 5))

#LMM: 
model <- lmer(value ~ treatment + (1 | block), data = subset(spad_23_FC, sampling == 5))
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```


###### Sampling Point 6

```{r}

# ANOVA:  
aov <- aov(value ~ treatment, data = subset(spad_23_FC, sampling == 6))
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

#KW: Including outliers does not substantively change the results
kruskal.test(value ~ treatment, data = subset(spad_23_FC, sampling == 6))
dunnTest(value ~ treatment, data = subset(spad_23_FC, sampling == 6))

#LMM: 
model <- lmer(value ~ treatment + (1 | block), data = subset(spad_23_FC, sampling == 6))
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```




##### 2024 only
```{r}

# ANOVA: no differences
aov <- aov(value ~ treatment, data = spad_24_FC)
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

#KW. no differences. I also tried including the outliers, and it doesn't change the result 
kruskal.test(value ~ treatment, data = spad_24_FC)
dunnTest(value ~ treatment, data = spad_24_FC_out)


```

```{r}
# LMM: isSingular error
model <- lmer(value ~ treatment + (1 | block), data = spad_24_FC)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

# LMM: no differences. date_collected is a significant RE. 
model <- lmer(value ~ treatment + (1 | date_collected), data = spad_24_FC)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

# LMM: 
model <- lmer(value ~ treatment + (1 | sampling/block), data = spad_24_FC)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```


###### Sampling Point 1

```{r}

# ANOVA
aov <- aov(value ~ treatment, data = subset(spad_24_FC, sampling == 1))
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

#KW. When outliers are included, there is no significant difference between treatments
kruskal.test(value ~ treatment, data = subset(spad_24_FC, sampling == 1))
dunnTest(value ~ treatment, data = subset(spad_24_FC, sampling == 1))

#LMM
model <- lmer(value ~ treatment + (1 | block), data = subset(spad_24_FC, sampling == 1))
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```

###### Sampling Point 2

```{r}

#ANOVA
aov <- aov(value ~ treatment, data = subset(spad_24_FC, sampling == 2))
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

#KW: including outliers doesn't change the result
kruskal.test(value ~ treatment, data = subset(spad_24_FC, sampling == 2))
dunnTest(value ~ treatment, data = subset(spad_24_FC, sampling == 2))

#LMM
model <- lmer(value ~ treatment + (1 | block), data = subset(spad_24_FC, sampling == 2))
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```

###### Sampling Point 3

```{r}

# ANOVA
aov <- aov(value ~ treatment, data = subset(spad_24_FC, sampling == 3))
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

#KW: Including outliers does not changethe result
kruskal.test(value ~ treatment, data = subset(spad_24_FC, sampling == 3))
dunnTest(value ~ treatment, data = subset(spad_24_FC, sampling == 3))

#LMM
model <- lmer(value ~ treatment + (1 | block), data = subset(spad_24_FC, sampling == 3))
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```
###### Sampling Point 4

```{r}

# ANOVA
aov <- aov(value ~ treatment, data = subset(spad_24_FC, sampling == 4))
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

#KW: including outliers decreases the significant, making straw only nealry significant with bare soil
kruskal.test(value ~ treatment, data = subset(spad_24_FC, sampling == 4))
dunnTest(value ~ treatment, data = subset(spad_24_FC_out, sampling == 4))

#LMM
model <- lmer(value ~ treatment + (1 | block), data = subset(spad_24_FC, sampling == 4))
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```

###### Sampling Point 5

```{r}

# ANOVA
aov <- aov(value ~ treatment, data = subset(spad_24_FC, sampling == 5))
summary(aov)
TukeyHSD(aov)
AIC(aov)
plot(aov)

#KW: Including outliers means there is absolutely no difference between treatments
kruskal.test(value ~ treatment, data = subset(spad_24_FC, sampling == 5))
dunnTest(value ~ treatment, data = subset(spad_24_FC_out, sampling == 5))

#LMM
model <- lmer(value ~ treatment + (1 | block), data = subset(spad_24_FC, sampling == 5))
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment)

```



