---
title: "Soil climate analysis"
author: "Jennifer Nicklay"
---

## Packages

```{r}
library(tidyr)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(here)
library(weathermetrics) #specifically for the temp units conversion
library(MASS) #boxcox transformation
library(lme4)         #mixed models
library(lmerTest)     #mixed models
library(broom.mixed)  #mixed models
library(emmeans)

```

## Loading Data
```{r}
soil_temp <- read.csv(here::here("00-data", "b-prepared", 
                                 "20250530_SCM-soil-temp.csv"), 
                      header = TRUE)

soil_vwc <- read.csv(here::here("00-data", "b-prepared", 
                                 "20250712_SCM-soil-moisture.csv"), 
                     header = TRUE)

soil_vwc_rt <- read.csv(here::here("00-data", "b-prepared", 
                                 "20250530_SCM-real time moisture-2023.csv"), 
                        header = TRUE)

drip_irrigation <- read.csv(here::here("00-data", "b-prepared", 
                                 "20250618_SCM-irrigation.csv"), header = TRUE)

temp_precip <- read.csv(here::here("00-data", "b-prepared", 
                                 "20250618_temp and precip.csv"), header = TRUE)
```

## Format Data

### Soil temperature
```{r}

soil_temp <- soil_temp %>%
             dplyr::select('ID', 'block','plot', 'treatment', 
                           'crop', 'date.time', 'temp_C') %>%
             mutate_at(c('ID', 'block', 'plot', 'treatment', 'crop'), as.factor) %>%
             mutate(date.time = lubridate::as_datetime(date.time, 
                                                       format = "%m/%d/%Y %H:%M:%S")) %>%
             mutate(date = lubridate::date(date.time)) %>%
             mutate(year = lubridate::isoyear(ymd_hms(date.time))) %>%
             mutate(week = lubridate::isoweek(ymd_hms(date.time))) %>%
             mutate(month = lubridate::month(date.time)) %>%
             mutate(study_yr = ifelse(year == "2023",1,
                                ifelse(year == "2024" & month < 5,1,
                                 2)))

#data frame for the min, max, and average soil temp each day for each temp probe
soil_temp_day <- soil_temp %>%
                 group_by(ID, block, plot, treatment, crop, year, study_yr, month, week, date) %>%
                 summarize(day_max = max(temp_C, na.rm = TRUE),
                           day_min = min(temp_C, na.rm = TRUE),
                           day_avg = (day_max + day_min)/2, 
                           tmp_dif = day_max - day_min) %>%
                 ungroup() 

#average max, min, and mean soil temp for the day for each treatment
soil_temp_trt <- soil_temp_day %>%
                 group_by(treatment, year, week, month, study_yr, date) %>%
                 summarize(trt_avg_max = mean(day_max, na.rm = TRUE),
                           trt_avg_min = mean(day_min, na.rm = TRUE),
                           trt_avg = (trt_avg_max + trt_avg_min)/2,
                           trt_dif = trt_avg_max - trt_avg_min) %>%
                 ungroup()

# ALERT: there's a weird quirk in the first and last days of the year, where they are part of the week from a different year. So that's worth checking, either to see if there's a better function or to just remove those weirdo dates from the calculation
soil_temp_wk <- soil_temp_day %>%
                group_by(treatment, year, study_yr, week) %>%
                summarize(wk_avg_max = mean(day_max, na.rm = TRUE),
                          wk_avg_min = mean(day_min, na.rm = TRUE),
                          wk_avg = (wk_avg_max + wk_avg_min) /2) %>%
                ungroup()

#min, max, and average soil temp for each month
soil_temp_month <- soil_temp_day %>%
                   group_by(treatment, year, study_yr, month) %>%
                   summarize(mon_avg_max = mean(day_max, na.rm = TRUE),
                             mon_avg_min = mean(day_min, na.rm = TRUE),
                             mon_avg = (mon_avg_max + mon_avg_min) / 2) %>%
                   ungroup()

#min, max, and average soil temp for May through October
soil_temp_season <- soil_temp_day %>%
                    subset(month > 4 & month < 11) %>%
                    group_by(treatment, year, study_yr) %>%
                    summarize(season_avg_max = mean(day_max, na.rm = TRUE),
                              season_avg_min = mean(day_min, na.rm = TRUE),
                              season_avg = (season_avg_max + season_avg_min) / 2) %>%
                    ungroup()
```
### Air temperature 
```{r}

#check with Nic to see if changing trace precip to 0.001 in was appropriate
#creating month and week columns, limiting dataset to the years I'm interested in, changing units from standard to metric
temp_precip_day <- temp_precip %>%
                   rename(max_temp_F = Maximum.Temperature.degrees..F.,
                          min_temp_F = Minimum.Temperature.degrees..F.,
                          precip_in = Precipitation..inches.,
                          date = Date) %>%
                   mutate(date = lubridate::as_date(date, format = "%Y-%m-%d"),
                          year = as.numeric(lubridate::year(date))) %>%
                   mutate(month = lubridate::month(date),
                          week = lubridate::isoweek(ymd(date)), 
                          precip_in = ifelse(precip_in == "T", 0.001, precip_in)) %>%
                   subset(year == "2023" | year == "2024" | (year == "2025" & month < 5)) %>%
                   mutate_at(c('max_temp_F', 'min_temp_F','precip_in'), as.numeric) %>%
                   mutate(max_temp_C = fahrenheit.to.celsius(max_temp_F, round = 2),
                          min_temp_C = fahrenheit.to.celsius(min_temp_F, round = 2),
                          precip_mm = convert_precip(precip_in, old_metric = "inches", new_metric = "mm", round = 2),
                          avg_temp_C = (max_temp_C + min_temp_C)/2) %>%
                   dplyr::select('date', 'year', 'month', 'week', 'max_temp_C', 'min_temp_C', 'avg_temp_C','precip_in', 'precip_mm') 

# ALERT: there's a weird quirk in the first and last days of the year, where they are part of the week from a different year. So that's worth checking, either to see if there's a better function or to just remove those weirdo dates from the calculation  
temp_wk <- temp_precip_day %>%
           group_by(year, month, week) %>%
           summarize(wk_avg_temp_max = mean(max_temp_C, na.rm = TRUE),
                     wk_avg_temp_min = mean(min_temp_C, na.rm = TRUE),
                     wk_avg_temp_C = (wk_avg_temp_max + wk_avg_temp_min) /2) %>%
           ungroup()

#mean for the max, min, and average daily air temps each month
temp_mon <- temp_precip_day %>%
            group_by(year, month) %>%
            summarize(mon_avg_temp_max = mean(max_temp_C, na.rm = TRUE),
                      mon_avg_temp_min = mean(min_temp_C, na.rm = TRUE),
                      mon_avg_temp_C = (mon_avg_temp_max + mon_avg_temp_min) / 2) %>%
            ungroup()

#mean for the max, min, and average daily air temps across the whole season
temp_season <- temp_precip_day %>%
               subset(month > 4 & month < 11) %>%
               group_by(year) %>%
               summarize(season_avg_temp_max = mean(max_temp_C, na.rm = TRUE),
                         season_avg_temp_min = mean(min_temp_C, na.rm = TRUE),
                         season_avg_temp_C = (season_avg_temp_max + season_avg_temp_min) / 2) %>%
               ungroup()

#mean for the max, min, and average daily air temp across the whole year
temp_yr <- temp_precip_day %>%
           group_by(year) %>%
           summarize(yr_avg_temp_max = mean(max_temp_C, na.rm = TRUE),
                     yr_avg_temp_min = mean(min_temp_C, na.rm = TRUE),
                     yr_avg_temp_C = (yr_avg_temp_max + yr_avg_temp_min) / 2) %>%
           ungroup()
```
### Irrigation and Precipitation

```{r}
#creating columns for different time markers and for the type of irrigation
drip_irrigation <- drip_irrigation %>%
                   mutate(date = lubridate::as_date(date, format = "%m/%d/%Y"),
                          year = lubridate::isoyear(ymd(date)), 
                          month = lubridate::month(date),
                          week = lubridate::isoweek(ymd(date)),
                          type = "drip") %>%
                   dplyr::select('date', 'year', 'month', 'week', 'type', 'irrigation_in')

#combining precipitation and drip irrigation into a single table
irrigation_day <- temp_precip_day %>%
                  mutate(type = "precip") %>%
                  rename(irrigation_in = precip_in) %>%
                  dplyr::select('date','year','month','week','type','irrigation_in') %>%
                  rbind(drip_irrigation)

#total water input by type each week
irrigation_wk <- irrigation_day %>%
                 group_by(year, month, week, type) %>%
                 summarize(irrigation_in = sum(irrigation_in)) %>%
                 ungroup()

#total water input by type each month
irrigation_mon <- irrigation_day %>%
                  group_by(year, month, type) %>%
                  summarize(irrigation_in = sum(irrigation_in)) %>%
                  ungroup()

#total water input by type for May through October
irrigation_season <- irrigation_day %>%
                     subset(month > 4 & month < 11) %>%
                     group_by(year, type) %>%
                     summarize(irrigation_in = sum(irrigation_in)) %>%
                     ungroup()

#total water input by type for the whole year
irrigation_yr <- irrigation_day %>%
                 group_by(year, type) %>%
                 summarize(irrigation_in = sum(irrigation_in)) %>%
                 ungroup()

```


### Soil Moisture
```{r}
#formatting data frame for soil moisture data from TDR
soil_vwc <- soil_vwc %>%
            subset(block != "5") %>%
            dplyr::select('sample_date', 'block','plot', 'treatment', 'crop', 
                          'bed_location', 'vwc_percent', 'period', 'EC')  %>%
            mutate(sample_date = lubridate::as_date(sample_date, 
                                                    format = "%m/%d/%Y"),
                   year = lubridate::isoyear(ymd(sample_date)),
                   month = lubridate::month(sample_date),
                   week = lubridate::isoweek(ymd(sample_date)),
                   bed_location = ifelse(bed_location == "hose", "center", bed_location)) %>%
            mutate_at(c('year', 'block', 'plot', 'treatment', 'crop', 'bed_location'), 
                      as.factor) 

#formatting data frame from continuous logger
soil_vwc_rt <- soil_vwc_rt %>%
               mutate(date.time = lubridate::as_datetime(date.time,
                                                         format = "%m/%d/%Y %H:%M")) %>%
               mutate(date = lubridate::date(date.time)) %>%
               mutate(month = lubridate::month(date.time)) %>%
               rename(BM = bare.soil,
                      CM = cardboard.mulch) %>%
               pivot_longer(cols = c('BM', 'CM'),
                            names_to = 'treatment',
                            values_to = "vwc_percent") %>%
               mutate(vwc_percent = as.numeric(gsub('%', '', vwc_percent))) %>%
               drop_na(vwc_percent) %>%
               subset(date != "2023-10-04") %>%
               mutate_at('treatment' ,as.factor)

```



####  Identifying outliers
```{r}
#There are three samples where the soil moisture is is 64.8%. All of them are much higher than the other samples for that plot during the same week. I removed these as outliers.

hist(soil_vwc$vwc_percent)

out_vwc <- subset(soil_vwc, vwc_percent > 50)

soil_vwc$vwc_percent[soil_vwc$vwc_percent > 50] <- NA

hist(soil_vwc$vwc_percent)
```



#### summary tables
```{r}
#average soil moisture by treatment, crop, plot, edge/center, and date
soil_vwc_wk <- soil_vwc %>%
               group_by(treatment, crop, block, plot, bed_location, sample_date, week, month, year) %>%
               summarize(vwc_avg_wk = mean(vwc_percent, na.rm = TRUE)) %>%
               ungroup()

#calculating the average soil moisture by treatment, crop, edge/center, and date
soil_vwc_wk_trt_crop <- soil_vwc %>%
                        group_by(treatment, crop, bed_location, sample_date, week, month, year) %>%
                        summarize(vwc_trt_avg_wk = mean(vwc_percent, na.rm = TRUE)) %>%
                        ungroup()

#average soil moisture by treatment, edge/center, and date (combines crops)
soil_vwc_wk_trt <- soil_vwc %>%
                   group_by(treatment, bed_location, sample_date, week, month, year) %>%
                   summarize(vwc_per_wk = mean(vwc_percent, na.rm = TRUE)) %>%
                   ungroup()

#average soil moisture by crop, edge/center, and date (combines treatments)
soil_vwc_wk_crop <- soil_vwc %>%
                    group_by(crop, bed_location, sample_date, week, month, year) %>%
                    summarize(vwc_per_wk = mean(vwc_percent, na.rm = TRUE)) %>%
                    ungroup()


#calculating the average soil moisture for difference in soil moisture between center and edge for each plot and day
soil_vwc_dif_plot <- soil_vwc_wk %>%
                     pivot_wider(names_from = bed_location,
                            values_from = vwc_avg_wk) %>%
                     mutate(vwc_plot = (center + edge)/2,
                            loc_dif = center - edge)

#calculating the treatment/crop average for difference in soil moisture between center and edge  for each day
soil_vwc_dif_trt_crop <- soil_vwc_dif_plot %>%
                         group_by(treatment, crop, sample_date, week, month, year) %>%
                         summarize(vwc_trt = mean(vwc_plot),
                                  vwc_dif_trt_avg = mean(loc_dif, na.rm = TRUE)) %>%
                         ungroup()

```

## Temperature

### Visualization

The three graphs below show the average daily temp, with each temp probe assigned a different color. It demonstrates that we have total coverage with at least one temp probe per treatment at all times. These graphs will not be in the publication
```{r}

ggplot(subset(soil_temp_day, treatment == "BM"), aes(x = date, y = day_avg, color = ID)) + geom_point() 

ggplot(subset(soil_temp_day, treatment == "CM"), aes(x = date, y = day_avg, color = ID)) + geom_point() 

ggplot(subset(soil_temp_day, treatment == "SM"), aes(x = date, y = day_avg, color = ID)) + geom_point() 


```
Following differences in average air temp, soil temperature was higher in 2023 compared to 2024, particularly in July and August (Table X, Figure X)

```{r}
# Make a table for this data

subset(soil_temp_month, month > 5 & month < 11)

```

Both cardboard mulch and straw mulch have a similarly moderating effect on average daily soil temperature. When the daily average air temperature in July 2023 and 2024 was 22C, for example, the soil temperature in mulched treatments remained several degrees cooler than the bare soil treatment; this trend was also apparent in March and April 2024, when bare soil warmed up faster than the mulched treatments. Conversely, when the air temperature dropped in October 2023, the soil temperature in mulched treatments remained slightly warmer than bare soil. 

```{r}
# Graphing the treatment average maximum daily soil temp perhaps shows the trends for bare soil a little more, but not so much that it's worth having an extra figure. 
#What to do with the straw mulch in 2024?

# add note symbol for when mulch was applied, or make it show only after mulch is applied.
ggplot() + 
  geom_line(data = subset(soil_temp_trt, year == "2023" & 
                                    month > 4 & 
                                    month < 11), 
       aes(x = date, 
           y = trt_avg, 
           color = treatment)) +
  geom_line(data = subset(temp_precip_day, year == "2023" & 
                                    month > 4 & 
                                    month < 11), 
            aes(x = date, 
                y = avg_temp_C)) +
  theme_bw()

ggplot() + 
  geom_line(data = subset(soil_temp_trt, year == "2023" & 
                                    month > 4 & 
                                    month < 11), 
       aes(x = date, 
           y = trt_dif, 
           color = treatment)) +
  theme_bw()

ggplot() + 
  geom_line(data = subset(soil_temp_trt, year == "2024" & 
                                    month > 4 & 
                                    month < 11), 
       aes(x = date, 
           y = trt_avg, 
           color = treatment)) +
  geom_line(data = subset(temp_precip_day, year == "2024" & 
                                    month > 4 & 
                                    month < 11), 
            aes(x = date, 
                y = avg_temp_C)) +
  theme_bw()


ggplot() + 
  geom_line(data = subset(soil_temp_trt, year == "2024" & 
                                    month > 4 & 
                                    month < 11), 
       aes(x = date, 
           y = trt_dif, 
           color = treatment)) +
  theme_bw()

```


While our study focused on the growing season between May and October, this trend was consistent over winter and in the spring, prior to mulch removal and planting.

```{r}
# I need to change the aesthetics so that the air temperature is a dashed, gray line
ggplot() + 
  geom_line(data = subset(soil_temp_trt, study_yr == 1), aes(x = date, y = trt_avg, color = treatment)) +
  geom_line(data = subset(temp_precip_day, (year == "2023" & month > 4) | (year == "2024" & month < 5)), 
            aes(x = date, y = avg_temp_C)) +
  theme_bw()

ggplot() +
  geom_line(data = subset(soil_temp_trt, study_yr == 2), aes(x = date, y = trt_avg, color = treatment)) + 
  geom_line(data = subset(temp_precip_day, (year == "2024" & month > 4) | (year == "2025" & month < 5)), 
            aes(x = date, y = avg_temp_C)) +
  theme_bw()

```



## Irrigation and Precipitation
During the growing season in 2023, there was 22.8 inches of rain recorded at the nearby weather station and 7.4 inches of water were applied to the study area via drip irrigation. Drip irrigation was largely utilized during a five week drought in May/June and a three week drought in August. In contrast, 2024 was a much wetter year, especially at the beginning of the season; there was 27.3 in of rain recorded and 2.4 inches of water were applied via drip irrigation during May and June. Only one irrigation event, at the end of June, was needed after the mulch treatments were applied. While there was also a period with minimal rain in late September/early October, we did not irrigate because the air temperatures were lower, bean/strawberry crops were not producing anymore, and the collards were not showing signs of water stress.


### Visualization
```{r}
#I'm largely sticking to bar graphs here because I'll combine with the soil moisture visualization eventually

# daily
ggplot(subset(irrigation_day, month > 4 & month < 11 & year == 2023), aes(x = factor(date), y = irrigation_in, fill=type, color = type)) + geom_bar(stat = "identity") 
  
ggplot(subset(irrigation_day, month > 4 & month < 11 & year == 2024), aes(x = factor(date), y = irrigation_in, fill=type, color = type)) + geom_bar(stat = "identity") 

# weekly
ggplot(subset(irrigation_wk, month > 4 & month < 11 & year == 2023), aes(x = factor(week), y = irrigation_in, fill=type, color = type)) + geom_bar(stat = "identity", position = "dodge") 
  
ggplot(subset(irrigation_wk, month > 4 & month < 11 & year == 2024), aes(x = factor(week), y = irrigation_in, fill=type, color = type)) + geom_bar(stat = "identity", position = "dodge") 

# monthly
ggplot(subset(irrigation_mon, month > 4 & month < 11 & year == 2023), aes(x = factor(month), y = irrigation_in, fill=type, color = type)) + geom_bar(stat = "identity", position = "dodge") 
  
ggplot(subset(irrigation_mon, month > 4 & month < 11 & year == 2024), aes(x = factor(month), y = irrigation_in, fill=type, color = type)) + geom_bar(stat = "identity", position = "dodge") 

# season
ggplot(irrigation_season, aes(x = factor(year), y = irrigation_in, fill=type, color = type)) + geom_bar(stat = "identity", position = "dodge") 

```

## Soil Moisture



### Visualization

Overview boxplots to diagnose problems. Addressed a row with NA for crop and treatment and changed bed location names to be consistent across years. Noting that there is definitely a differnce in soil moisture at the edge of plot between years (2024 is higher). Range of soil moisture values for edge is wider than for the centers. Average values don't seem much different between treatments and crops
```{r}
ggplot(soil_vwc, aes(x = treatment, y = vwc_percent, fill = bed_location)) + geom_boxplot() + facet_grid(~crop) + ggtitle("Soil Moisture for Edge vs. Center of plot")

ggplot(soil_vwc, aes(x = crop, y = vwc_percent, fill = treatment)) + geom_boxplot() + facet_wrap(~year + bed_location) + ggtitle("Soil Moisture by Bed location and year")

ggplot(soil_vwc_dif_plot, aes(x = crop, y = loc_dif, fill = treatment)) + geom_boxplot() + facet_grid(~year)

 

```

Here, I visualize the soil moisture across the season for each treatment-crop-year. Soil moisture in the centers is visually similar for all treatments each week; a difference between treatments is clearer in 2024.
```{r}

ggplot() + 
  geom_point(data = subset(soil_vwc, bed_location == "center"), aes(x = week, y = vwc_percent, color = treatment), size = 0.75) + 
  geom_line(data = subset(soil_vwc_wk_trt_crop, bed_location == "center"), aes(x = week, y = vwc_trt_avg_wk, color = treatment)) + 
  facet_wrap(~year + crop)

ggplot() + 
  geom_point(data = subset(soil_vwc, bed_location == "edge"), aes(x = week, y = vwc_percent, color = treatment), size = 0.75) + 
  geom_line(data = subset(soil_vwc_wk_trt_crop, bed_location == "edge"), aes(x = week, y = vwc_trt_avg_wk, color = treatment)) + 
  facet_wrap(~year + crop)


#based on readings, I think this is actually the plot I'll uses in the publication
ggplot(subset(soil_vwc, year == 2023), aes(x = as.factor(week), y = vwc_percent, fill = treatment)) + geom_boxplot() + facet_grid(~crop)
ggplot(subset(soil_vwc, year == 2024), aes(x = as.factor(week), y = vwc_percent, fill = treatment)) + geom_boxplot() + facet_grid(~crop)

ggplot(subset(soil_vwc, year == 2023 & bed_location == "center"), aes(x = as.factor(week), y = vwc_percent, fill = treatment)) + geom_boxplot() + facet_grid(~crop)
ggplot(subset(soil_vwc, year == 2024 & bed_location == "center"), aes(x = as.factor(week), y = vwc_percent, fill = treatment)) + geom_boxplot() + facet_grid(~crop)

ggplot(subset(soil_vwc, year == 2023 & bed_location == "edge"), aes(x = as.factor(week), y = vwc_percent, fill = treatment)) + geom_boxplot() + facet_grid(~crop)
ggplot(subset(soil_vwc, year == 2024 & bed_location == "edge"), aes(x = as.factor(week), y = vwc_percent, fill = treatment)) + geom_boxplot() + facet_grid(~crop)

```




### Normality
(note to self to try analyzing the bed locations separately, see if there is a difference)


I have tried as many things I can think of for these transformations - boxcox, log, cubic, sqrt, and all for negatively skewed data. I also tried splitting the dataset into edge and center, and then running transformations. And the wild thing is that, visually, it looks like the most normally distributed dataset I've ever gotten to deal with 
```{r}
library(moments)
library(ggpubr)

hist(soil_vwc$vwc_percent)
skewness(soil_vwc$vwc_percent, na.rm = TRUE)
qqnorm(soil_vwc$vwc_percent, main='Normal')
qqline(soil_vwc$vwc_percent)

shapiro.test(soil_vwc$vwc_percent)

```

Box cox
```{r}

ggdensity(soil_vwc, x = "vwc_percent", fill = "lightgray", title = "vwc_percent") +
  scale_x_continuous(limits = c(3, 12)) +
  stat_overlay_normal_density(color = "red", linetype = "dashed")

bc <- boxcox(soil_vwc$vwc_percent ~ 1, lambda = seq(-6,6,0.1))
lambda <- bc$x[which.max(bc$y)]
soil_vwc$bc_vwc <- (soil_vwc$vwc_percent ^ lambda-1)/lambda
skewness(soil_vwc$bc_vwc, na.rm = TRUE)

hist(soil_vwc$bc_vwc)
qqnorm(soil_vwc$bc_vwc, main='Normal')
qqline(soil_vwc$bc_vwc)

shapiro.test(soil_vwc$bc_vwc)


ggdensity(soil_vwc, x = "bc_vwc", fill = "lightgray", title = "vwc_percent") +
  scale_x_continuous(limits = c(3, 12)) +
  stat_overlay_normal_density(color = "red", linetype = "dashed")

```

Square root
```{r}

soil_vwc$sqrt_vwc <- sqrt(max(soil_vwc$vwc_percent +1, na.rm = TRUE) - soil_vwc$vwc_percent)

skewness(soil_vwc$sqrt_vwc, na.rm = TRUE)

hist(soil_vwc$sqrt_vwc)
qqnorm(soil_vwc$sqrt_vwc, main='Normal')
qqline(soil_vwc$sqrt_vwc)

shapiro.test(soil_vwc$sqrt_vwc)


ggdensity(soil_vwc, x = "sqrt_vwc", fill = "lightgray", title = "vwc_percent") +
  scale_x_continuous(limits = c(3, 12)) +
  stat_overlay_normal_density(color = "red", linetype = "dashed")
```

### ANOVA 


#### overall
```{r}
model <- aov(sqrt_vwc ~ treatment*crop, soil_vwc)
AIC(model)
summary(model)
TukeyHSD(model)

model <- aov(sqrt_vwc ~ treatment*crop, subset(soil_vwc, year == "2023"))
AIC(model)
summary(model)
TukeyHSD(model)

model <- aov(sqrt_vwc ~ treatment*crop, subset(soil_vwc, year == "2024"))
AIC(model)
summary(model)
TukeyHSD(model)
```


#### 2023
If I need to go forward with weekly analysis, then I would need to do Tukey HSD tests
```{r}
summary(aov(sqrt_vwc ~ treatment*crop, subset(soil_vwc, year == "2023" & week == "25")))
summary(aov(sqrt_vwc ~ treatment*crop, subset(soil_vwc, year == "2023" & week == "26")))
summary(aov(sqrt_vwc ~ treatment*crop, subset(soil_vwc, year == "2023" & week == "27")))
summary(aov(sqrt_vwc ~ treatment*crop, subset(soil_vwc, year == "2023" & week == "28")))
summary(aov(sqrt_vwc ~ treatment*crop, subset(soil_vwc, year == "2023" & week == "29")))
summary(aov(sqrt_vwc ~ treatment*crop, subset(soil_vwc, year == "2023" & week == "30")))
summary(aov(sqrt_vwc ~ treatment*crop, subset(soil_vwc, year == "2023" & week == "31")))
summary(aov(sqrt_vwc ~ treatment*crop, subset(soil_vwc, year == "2023" & week == "35")))
summary(aov(sqrt_vwc ~ treatment*crop, subset(soil_vwc, year == "2023" & week == "36")))
summary(aov(sqrt_vwc ~ treatment*crop, subset(soil_vwc, year == "2023" & week == "37")))
summary(aov(sqrt_vwc ~ treatment*crop, subset(soil_vwc, year == "2023" & week == "38")))
summary(aov(sqrt_vwc ~ treatment*crop, subset(soil_vwc, year == "2023" & week == "39")))

```

#### 2024
If I need to go forward with weekly analysis, then I would need to do Tukey HSD tests
```{r}
summary(aov(sqrt_vwc ~ treatment*crop, subset(soil_vwc, year == "2024" & week == "27")))
summary(aov(sqrt_vwc ~ treatment*crop, subset(soil_vwc, year == "2024" & week == "28")))
summary(aov(sqrt_vwc ~ treatment*crop, subset(soil_vwc, year == "2024" & week == "29")))
summary(aov(sqrt_vwc ~ treatment*crop, subset(soil_vwc, year == "2024" & week == "30")))
summary(aov(sqrt_vwc ~ treatment*crop, subset(soil_vwc, year == "2024" & week == "32")))
summary(aov(sqrt_vwc ~ treatment*crop, subset(soil_vwc, year == "2024" & week == "33")))
summary(aov(sqrt_vwc ~ treatment*crop, subset(soil_vwc, year == "2024" & week == "34")))
summary(aov(sqrt_vwc ~ treatment*crop, subset(soil_vwc, year == "2024" & week == "35")))
summary(aov(sqrt_vwc ~ treatment*crop, subset(soil_vwc, year == "2024" & week == "36")))
summary(aov(sqrt_vwc ~ treatment*crop, subset(soil_vwc, year == "2024" & week == "39")))

```

### Linear Mixed Model
Noting that model results live here: https://docs.google.com/spreadsheets/d/16b8dL3h7Hl0gyc-eoVd-CrQ_Gf6J7o4LrDXqP7GE_BE/edit?gid=0#gid=0
```{r}

model <- lmer(sqrt_vwc ~ treatment*crop + (1 | year/week/block), data = soil_vwc)
AIC(model)
summary(model)

#extract random effects and residual values
re <- ranef(model)
resid <- augment(model)

#generate qqplot
plot(re)

#generate plot of fitted vs. residual values
ggplot(resid, aes(x = .fitted, y = .resid)) + geom_point() + stat_smooth(se = F)

#ranked likelihood test
ranova(model)

emmeans(model, pairwise ~ treatment*crop)
```




##Extra code from when I was being more aggressive about removing potential outliers

```{r}

# now I'm interested in samples that were very different from the others taken in the plot the same day
vwc_range <- soil_vwc %>% 
             group_by(sample_date, bed_location, block, plot) %>%
             summarize(max_vwc = max(vwc_percent, na.rm = TRUE),
                       min_vwc = min(vwc_percent, na.rm = TRUE),
                       range_vwc = max_vwc - min_vwc) %>%
             ungroup()

hist(vwc_range$range_vwc)

out_range <- subset(vwc_range, range_vwc > 10)

# I checked all the samples >11, and then went back through the ones I thought I wanted to replace with NA and deleted several that, after working through more, looked like in the range of normal
subset(soil_vwc, sample_date == "2024-09-25" & plot == "F" & block == "4")
```

```{r}
# This point was much lower than the other measurements (28-34%) 
soil_vwc$vwc_percent[soil_vwc$sample_date == "2023-06-28" & 
                              soil_vwc$plot == "B" & 
                              soil_vwc$block == "2" & 
                              soil_vwc$vwc_percent == 10.6] <- NA

# This point was much lower than the other measurements (23-26%) 
soil_vwc$vwc_percent[soil_vwc$sample_date == "2023-06-28" & 
                              soil_vwc$plot == "G" & 
                              soil_vwc$block == "2" & 
                              soil_vwc$vwc_percent == 11.1] <- NA

# This point was much lower than the other measurements (20-30%)
soil_vwc$vwc_percent[soil_vwc$sample_date == "2023-07-13" & 
                              soil_vwc$plot == "I" & 
                              soil_vwc$block == "4" & 
                              soil_vwc$vwc_percent == 8.0] <- NA

# This point was much lower than the other measurements in same bed location (24-31%)
soil_vwc$vwc_percent[soil_vwc$sample_date == "2023-08-30" & 
                              soil_vwc$plot == "E" & 
                              soil_vwc$block == "1" & 
                              soil_vwc$vwc_percent == 9.0] <- NA

# This point was much lower than the other measurements (12-22%)
soil_vwc$vwc_percent[soil_vwc$sample_date == "2023-09-14" & 
                              soil_vwc$plot == "H" & 
                              soil_vwc$block == "2" & 
                              soil_vwc$vwc_percent == 5.5] <- NA

# This point was much lower than the other measurements (15-25%)
soil_vwc$vwc_percent[soil_vwc$sample_date == "2023-09-14" & 
                              soil_vwc$plot == "C" & 
                              soil_vwc$block == "2" & 
                              soil_vwc$vwc_percent == 4.0] <- NA

# This point was much lower than the other measurements (38-39%)
soil_vwc$vwc_percent[soil_vwc$sample_date == "2024-08-28" & 
                              soil_vwc$plot == "C" & 
                              soil_vwc$block == "1" & 
                              soil_vwc$vwc_percent == 20.7] <- NA

# This point was much higher than the other measurements(18)
soil_vwc$vwc_percent[soil_vwc$sample_date == "2024-09-04" & 
                              soil_vwc$plot == "D" & 
                              soil_vwc$block == "4" & 
                              soil_vwc$vwc_percent == 34.0] <- NA

# This point was much higher than the other measurements
soil_vwc$vwc_percent[soil_vwc$sample_date == "2024-09-25" & 
                              soil_vwc$plot == "I" & 
                              soil_vwc$block == "4" & 
                              soil_vwc$vwc_percent == 35.3] <- NA

# This point was much higher than other measurements (12%)
soil_vwc$vwc_percent[soil_vwc$sample_date == "2024-09-25" & 
                              soil_vwc$plot == "B" & 
                              soil_vwc$block == "4" & 
                              soil_vwc$vwc_percent == 27.2] <- NA

# This point was much higher than other measurements (18-22%)
soil_vwc$vwc_percent[soil_vwc$sample_date == "2024-09-25" & 
                              soil_vwc$plot == "A" & 
                              soil_vwc$block == "2" & 
                              soil_vwc$vwc_percent == 32.9] <- NA

# This point was much lower than other measurements (14-18%)
soil_vwc$vwc_percent[soil_vwc$sample_date == "2024-09-25" & 
                              soil_vwc$plot == "F" & 
                              soil_vwc$block == "4" & 
                              soil_vwc$vwc_percent == 7.0] <- NA
             
```

```{r}
# from soil moisture outlier id. Combinations from out_range table that I checked but didn't take any action on.

#I didn't mark several potential outliers as NA because while the total range was quite high, the measurements taken in the plot were more spread out (i.e., it wasn't just the one low or high point)
# sample_date == "2023-06-22" & plot == "B" & block == "4"
# sample_date == "2023-06-22" & plot == "C" & block == "1"
# sample_date == "2023-06-22" & plot == "C" & block == "3"
# sample_date == "2023-06-28" & plot == "A" & block == "4"
# sample_date == "2023-06-28" & plot == "C" & block == "3"
# sample_date == "2023-06-28" & plot == "C" & block == "4"
# sample_date == "2023-06-28" & plot == "D" & block == "1"
# sample_date == "2023-06-28" & plot == "F" & block == "4"
# sample_date == "2023-06-28" & plot == "H" & block == "2"
# sample_date == "2023-07-04" & plot == "H" & block == "3"
# sample_date == "2023-07-26" & plot == "A" & block == "3"
# sample_date == "2023-07-26" & plot == "B" & block == "2"
# sample_date == "2023-07-26" & plot == "B" & block == "4"
# sample_date == "2023-07-26" & plot == "G" & block == "3"
# sample_date == "2023-07-26" & plot == "G" & block == "4"
# sample_date == "2023-07-26" & plot == "I" & block == "3"
# sample_date == "2023-07-31" & plot == "G" & block == "3"
# sample_date == "2023-08-30" & plot == "C" & block == "2"
# sample_date == "2023-08-30" & plot == "I" & block == "4"
# sample_date == "2023-09-06" & plot == "C" & block == "4"
# sample_date == "2023-09-06" & plot == "E" & block == "1"
# sample_date == "2023-09-06" & plot == "G" & block == "3"
# sample_date == "2023-09-14" & plot == "C" & block == "4"
# sample_date == "2023-09-14" & plot == "G" & block == "3"
# sample_date == "2023-09-27" & plot == "A" & block == "1"
# sample_date == "2023-09-27" & plot == "C" & block == "2"
# sample_date == "2023-09-27" & plot == "D" & block == "1"
# sample_date == "2023-09-27" & plot == "I" & block == "3"
# sample_date == "2023-09-27" & plot == "I" & block == "4"

# sample_date == "2024-07-01" & plot == "A" & block == "3"
# sample_date == "2024-07-01" & plot == "C" & block == "2"
# sample_date == "2024-07-01" & plot == "E" & block == "1"
# sample_date == "2024-07-01" & plot == "F" & block == "2"
# sample_date == "2024-07-01" & plot == "G" & block == "2"
# sample_date == "2024-07-12" & plot == "A" & block == "3"
# sample_date == "2024-07-12" & plot == "B" & block == "4"
# sample_date == "2024-07-12" & plot == "E" & block == "1"
# sample_date == "2024-07-12" & plot == "F" & block == "2"
# sample_date == "2024-07-12" & plot == "F" & block == "3"
# sample_date == "2024-07-12" & plot == "G" & block == "4"
# sample_date == "2024-07-16" & plot == "C" & block == "2"
# sample_date == "2024-07-16" & plot == "E" & block == "1"
# sample_date == "2024-07-16" & plot == "G" & block == "3"
# sample_date == "2024-07-24" & plot == "C" & block == "1"
# sample_date == "2024-07-24" & plot == "I" & block == "4"
# sample_date == "2024-08-08" & plot == "D" & block == "1"
# sample_date == "2024-08-08" & plot == "E" & block == "1"
# sample_date == "2024-08-08" & plot == "G" & block == "3"
# sample_date == "2024-08-12" & plot == "B" & block == "4"
# sample_date == "2024-08-12" & plot == "I" & block == "1"
# sample_date == "2024-08-12" & plot == "I" & block == "2"
# sample_date == "2024-08-23" & plot == "D" & block == "1"
# sample_date == "2024-08-23" & plot == "E" & block == "1"
# sample_date == "2024-08-28" & plot == "F" & block == "4"
# sample_date == "2024-08-28" & plot == "I" & block == "3"
# sample_date == "2024-09-04" & plot == "A" & block == "2"
# sample_date == "2024-09-04" & plot == "F" & block == "3"
# sample_date == "2024-09-04" & plot == "G" & block == "1"
# sample_date == "2024-09-04" & plot == "G" & block == "3"
# sample_date == "2024-09-04" & plot == "H" & block == "1"
# sample_date == "2024-09-25" & plot == "D" & block == "1"


#conflicted about these
# sample_date == "2023-06-28" & plot == "D" & block == "3
# sample_date == "2023-06-28" & plot == "E" & block == "3"
# sample_date == "2023-08-30" & plot == "B" & block == "3"
# sample_date == "2023-09-14" & plot == "B" & block == "3"
# sample_date == "2023-09-20" & plot == "B" & block == "3"
# sample_date == "2023-09-20" & plot == "I" & block == "4"
# sample_date == "2024-08-28" & plot == "I" & block == "2"
# sample_date == "2024-07-01" & plot == "C" & block == "4"
# sample_date == "2024-08-08" & plot == "B" & block == "4"
# sample_date == "2024-08-08" & plot == "D" & block == "1"
# sample_date == "2024-07-01" & plot == "G" & block == "2"
# sample_date == "2024-07-12" & plot == "G" & block == "1"
# sample_date == "2024-07-24" & plot == "A" & block == "2"
# sample_date == "2024-07-24" & plot == "B" & block == "2"
# sample_date == "2024-07-24" & plot == "C" & block == "2"
# sample_date == "2024-08-23" & plot == "D" & block == "3"
# sample_date == "2024-08-28" & plot == "D" & block == "1"
# sample_date == "2024-09-25" & plot == "I" & block == "3"

```

